{"version":3,"sources":["../../src/services/groups.service.ts"],"sourcesContent":["import { Group, PrismaClient } from '@prisma/client';\nimport { HttpException } from '@exceptions/HttpException';\nimport { isEmpty } from '@utils/util';\nimport { CreateGroupDto } from '@/dtos/groups.dto';\n\nclass GroupService {\n  public groups = new PrismaClient().group;\n\n  public async getAll(): Promise<Group[]> {\n    const allGroups: Group[] = await this.groups.findMany({\n      where: { active: true },\n      orderBy: {\n        order: 'asc',\n      },\n    });\n    return allGroups;\n  }\n\n  public async getGivenId(id: number): Promise<Group> {\n    if (isEmpty(id)) throw new HttpException(400, 'id is empty');\n\n    const findGroup: Group = await this.groups.findUnique({ where: { id: id } });\n    if (!findGroup || (findGroup && !findGroup.active)) throw new HttpException(409, \"Group doesn't exist\");\n\n    return findGroup;\n  }\n\n  public async create(data: CreateGroupDto): Promise<Group> {\n    if (isEmpty(data)) throw new HttpException(400, 'data is empty');\n\n    const findGroup: Group = await this.groups.findUnique({ where: { name: data.name } });\n    if (findGroup) throw new HttpException(409, `Group with title ${data.name} already exists`);\n\n    const count = await this.groups.count({ where: { active: true } });\n\n    const createdata: Group = await this.groups.create({ data: { ...data, order: count + 1 } });\n    return createdata;\n  }\n\n  public async update(id: number, data: CreateGroupDto): Promise<Group> {\n    if (isEmpty(data)) throw new HttpException(400, 'data is empty');\n\n    const findGroup: Group = await this.groups.findUnique({ where: { id: id } });\n    if (!findGroup || (findGroup && !findGroup.active)) throw new HttpException(409, \"Group doesn't exist\");\n\n    const newGroup = await this.groups.update({ where: { id: id }, data: { ...data } });\n    return newGroup;\n  }\n\n  public async delete(id: number): Promise<Group> {\n    if (isEmpty(id)) throw new HttpException(400, \"Group doesn't existId\");\n\n    const findGroup: Group = await this.groups.findUnique({ where: { id: id } });\n    if (!findGroup) throw new HttpException(409, \"Group doesn't exist\");\n\n    const deleteGroup = await this.groups.update({\n      where: { id: id },\n      data: {\n        ...findGroup,\n        active: false,\n      },\n    });\n    return deleteGroup;\n  }\n}\n\nexport default GroupService;\n"],"names":["GroupService","getAll","allGroups","groups","findMany","where","active","orderBy","order","getGivenId","id","isEmpty","HttpException","findGroup","findUnique","create","data","name","count","createdata","update","newGroup","delete","deleteGroup","PrismaClient","group"],"mappings":"AAAA;;;;+BAkEA;;aAAA;;wBAlEoC;+BACN;sBACN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGxB,IAAA,AAAMA,eAAN,MAAMA;IAGJ,MAAaC,SAA2B;QACtC,MAAMC,YAAqB,MAAM,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC;YACpDC,OAAO;gBAAEC,QAAQ,IAAI;YAAC;YACtBC,SAAS;gBACPC,OAAO;YACT;QACF;QACA,OAAON;IACT;IAEA,MAAaO,WAAWC,EAAU,EAAkB;QAClD,IAAIC,IAAAA,aAAO,EAACD,KAAK,MAAM,IAAIE,4BAAa,CAAC,KAAK,eAAe;QAE7D,MAAMC,YAAmB,MAAM,IAAI,CAACV,MAAM,CAACW,UAAU,CAAC;YAAET,OAAO;gBAAEK,IAAIA;YAAG;QAAE;QAC1E,IAAI,CAACG,aAAcA,aAAa,CAACA,UAAUP,MAAM,EAAG,MAAM,IAAIM,4BAAa,CAAC,KAAK,uBAAuB;QAExG,OAAOC;IACT;IAEA,MAAaE,OAAOC,IAAoB,EAAkB;QACxD,IAAIL,IAAAA,aAAO,EAACK,OAAO,MAAM,IAAIJ,4BAAa,CAAC,KAAK,iBAAiB;QAEjE,MAAMC,YAAmB,MAAM,IAAI,CAACV,MAAM,CAACW,UAAU,CAAC;YAAET,OAAO;gBAAEY,MAAMD,KAAKC,IAAI;YAAC;QAAE;QACnF,IAAIJ,WAAW,MAAM,IAAID,4BAAa,CAAC,KAAK,CAAC,iBAAiB,EAAEI,KAAKC,IAAI,CAAC,eAAe,CAAC,EAAE;QAE5F,MAAMC,QAAQ,MAAM,IAAI,CAACf,MAAM,CAACe,KAAK,CAAC;YAAEb,OAAO;gBAAEC,QAAQ,IAAI;YAAC;QAAE;QAEhE,MAAMa,aAAoB,MAAM,IAAI,CAAChB,MAAM,CAACY,MAAM,CAAC;YAAEC,MAAM,qCAAKA;gBAAMR,OAAOU,QAAQ;;QAAI;QACzF,OAAOC;IACT;IAEA,MAAaC,OAAOV,EAAU,EAAEM,IAAoB,EAAkB;QACpE,IAAIL,IAAAA,aAAO,EAACK,OAAO,MAAM,IAAIJ,4BAAa,CAAC,KAAK,iBAAiB;QAEjE,MAAMC,YAAmB,MAAM,IAAI,CAACV,MAAM,CAACW,UAAU,CAAC;YAAET,OAAO;gBAAEK,IAAIA;YAAG;QAAE;QAC1E,IAAI,CAACG,aAAcA,aAAa,CAACA,UAAUP,MAAM,EAAG,MAAM,IAAIM,4BAAa,CAAC,KAAK,uBAAuB;QAExG,MAAMS,WAAW,MAAM,IAAI,CAAClB,MAAM,CAACiB,MAAM,CAAC;YAAEf,OAAO;gBAAEK,IAAIA;YAAG;YAAGM,MAAM,kBAAKA;QAAO;QACjF,OAAOK;IACT;IAEA,MAAaC,OAAOZ,EAAU,EAAkB;QAC9C,IAAIC,IAAAA,aAAO,EAACD,KAAK,MAAM,IAAIE,4BAAa,CAAC,KAAK,yBAAyB;QAEvE,MAAMC,YAAmB,MAAM,IAAI,CAACV,MAAM,CAACW,UAAU,CAAC;YAAET,OAAO;gBAAEK,IAAIA;YAAG;QAAE;QAC1E,IAAI,CAACG,WAAW,MAAM,IAAID,4BAAa,CAAC,KAAK,uBAAuB;QAEpE,MAAMW,cAAc,MAAM,IAAI,CAACpB,MAAM,CAACiB,MAAM,CAAC;YAC3Cf,OAAO;gBAAEK,IAAIA;YAAG;YAChBM,MAAM,qCACDH;gBACHP,QAAQ,KAAK;;QAEjB;QACA,OAAOiB;IACT;;aAzDOpB,SAAS,IAAIqB,oBAAY,GAAGC,KAAK;;AA0D1C;MAEA,WAAezB"}