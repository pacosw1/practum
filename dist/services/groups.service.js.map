{"version":3,"sources":["../../src/services/groups.service.ts"],"sourcesContent":["import { Group, PrismaClient } from '@prisma/client';\nimport { HttpException } from '@exceptions/HttpException';\nimport { isEmpty } from '@utils/util';\nimport { CreateGroupDto } from '@/dtos/groups.dto';\n\nclass GroupService {\n  public groups = new PrismaClient().group;\n\n  public async getAll(): Promise<Group[]> {\n    const allGroups: Group[] = await this.groups.findMany();\n    return allGroups;\n  }\n\n  public async getGivenId(id: number): Promise<Group> {\n    if (isEmpty(id)) throw new HttpException(400, 'id is empty');\n\n    const findGroup: Group = await this.groups.findUnique({ where: { id: id } });\n    if (!findGroup) throw new HttpException(409, \"Group doesn't exist\");\n\n    return findGroup;\n  }\n\n  public async create(data: CreateGroupDto): Promise<Group> {\n    if (isEmpty(data)) throw new HttpException(400, 'data is empty');\n\n    const findGroup: Group = await this.groups.findUnique({ where: { name: data.name } });\n    if (findGroup) throw new HttpException(409, `Group with title ${data.name} already exists`);\n\n    const createdata: Group = await this.groups.create({ data: { ...data } });\n    return createdata;\n  }\n\n  public async update(id: number, data: CreateGroupDto): Promise<Group> {\n    if (isEmpty(data)) throw new HttpException(400, 'data is empty');\n\n    const findGroup: Group = await this.groups.findUnique({ where: { id: id } });\n    if (!findGroup) throw new HttpException(409, \"Group doesn't exist\");\n\n    const newGroup = await this.groups.update({ where: { id: id }, data: { ...data } });\n    return newGroup;\n  }\n\n  public async delete(id: number): Promise<Group> {\n    if (isEmpty(id)) throw new HttpException(400, \"Group doesn't existId\");\n\n    const findGroup: Group = await this.groups.findUnique({ where: { id: id } });\n    if (!findGroup) throw new HttpException(409, \"Group doesn't exist\");\n\n    const deleteGroup = await this.groups.delete({ where: { id: id } });\n    return deleteGroup;\n  }\n}\n\nexport default GroupService;\n"],"names":["GroupService","getAll","allGroups","groups","findMany","getGivenId","id","isEmpty","HttpException","findGroup","findUnique","where","create","data","name","createdata","update","newGroup","delete","deleteGroup","PrismaClient","group"],"mappings":"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"}