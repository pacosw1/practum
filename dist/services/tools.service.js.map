{"version":3,"sources":["../../src/services/tools.service.ts"],"sourcesContent":["import { PrismaClient, Tool } from '@prisma/client';\nimport { HttpException } from '@exceptions/HttpException';\nimport { isEmpty } from '@utils/util';\nimport { CreateEntryExitDto } from '@/dtos/process.dto';\n\nclass ToolsService {\n  public exits = new PrismaClient().tool;\n\n  public async getAll(): Promise<Tool[]> {\n    const all: Tool[] = await this.exits.findMany();\n    return all;\n  }\n\n  public async create(data: CreateEntryExitDto): Promise<Tool> {\n    if (isEmpty(data)) throw new HttpException(400, 'data is empty');\n\n    const findEntry: Tool = await this.exits.findUnique({ where: { name: data.name } });\n    if (findEntry) throw new HttpException(409, `Tool with title ${data.name} already exists`);\n\n    const createEntry: Tool = await this.exits.create({ data: { ...data } });\n    return createEntry;\n  }\n\n  public async update(id: number, data: CreateEntryExitDto): Promise<Tool> {\n    if (isEmpty(data)) throw new HttpException(400, 'data is empty');\n\n    const findEntry: Tool = await this.exits.findUnique({ where: { id: id } });\n    if (!findEntry) throw new HttpException(409, \"Tool doesn't exist\");\n\n    const newEntry = await this.exits.update({ where: { id: id }, data: { ...data } });\n    return newEntry;\n  }\n\n  public async delete(id: number): Promise<Tool> {\n    if (isEmpty(id)) throw new HttpException(400, \"Tool doesn't exist\");\n\n    const findEntry: Tool = await this.exits.findUnique({ where: { id: id } });\n    if (!findEntry) throw new HttpException(409, \"Tool doesn't exist\");\n\n    const deleteEntry = await this.exits.delete({ where: { id: id } });\n    return deleteEntry;\n  }\n\n}\n\nexport default ToolsService;\n"],"names":["ToolsService","getAll","all","exits","findMany","create","data","isEmpty","HttpException","findEntry","findUnique","where","name","createEntry","update","id","newEntry","delete","deleteEntry","PrismaClient","tool"],"mappings":"AAAA;;;;+BA6CA;;aAAA;;wBA7CmC;+BACL;sBACN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGxB,IAAA,AAAMA,eAAN,MAAMA;IAGJ,MAAaC,SAA0B;QACrC,MAAMC,MAAc,MAAM,IAAI,CAACC,KAAK,CAACC,QAAQ;QAC7C,OAAOF;IACT;IAEA,MAAaG,OAAOC,IAAwB,EAAiB;QAC3D,IAAIC,IAAAA,aAAO,EAACD,OAAO,MAAM,IAAIE,4BAAa,CAAC,KAAK,iBAAiB;QAEjE,MAAMC,YAAkB,MAAM,IAAI,CAACN,KAAK,CAACO,UAAU,CAAC;YAAEC,OAAO;gBAAEC,MAAMN,KAAKM,IAAI;YAAC;QAAE;QACjF,IAAIH,WAAW,MAAM,IAAID,4BAAa,CAAC,KAAK,CAAC,gBAAgB,EAAEF,KAAKM,IAAI,CAAC,eAAe,CAAC,EAAE;QAE3F,MAAMC,cAAoB,MAAM,IAAI,CAACV,KAAK,CAACE,MAAM,CAAC;YAAEC,MAAM,kBAAKA;QAAO;QACtE,OAAOO;IACT;IAEA,MAAaC,OAAOC,EAAU,EAAET,IAAwB,EAAiB;QACvE,IAAIC,IAAAA,aAAO,EAACD,OAAO,MAAM,IAAIE,4BAAa,CAAC,KAAK,iBAAiB;QAEjE,MAAMC,YAAkB,MAAM,IAAI,CAACN,KAAK,CAACO,UAAU,CAAC;YAAEC,OAAO;gBAAEI,IAAIA;YAAG;QAAE;QACxE,IAAI,CAACN,WAAW,MAAM,IAAID,4BAAa,CAAC,KAAK,sBAAsB;QAEnE,MAAMQ,WAAW,MAAM,IAAI,CAACb,KAAK,CAACW,MAAM,CAAC;YAAEH,OAAO;gBAAEI,IAAIA;YAAG;YAAGT,MAAM,kBAAKA;QAAO;QAChF,OAAOU;IACT;IAEA,MAAaC,OAAOF,EAAU,EAAiB;QAC7C,IAAIR,IAAAA,aAAO,EAACQ,KAAK,MAAM,IAAIP,4BAAa,CAAC,KAAK,sBAAsB;QAEpE,MAAMC,YAAkB,MAAM,IAAI,CAACN,KAAK,CAACO,UAAU,CAAC;YAAEC,OAAO;gBAAEI,IAAIA;YAAG;QAAE;QACxE,IAAI,CAACN,WAAW,MAAM,IAAID,4BAAa,CAAC,KAAK,sBAAsB;QAEnE,MAAMU,cAAc,MAAM,IAAI,CAACf,KAAK,CAACc,MAAM,CAAC;YAAEN,OAAO;gBAAEI,IAAIA;YAAG;QAAE;QAChE,OAAOG;IACT;;aAnCOf,QAAQ,IAAIgB,oBAAY,GAAGC,IAAI;;AAqCxC;MAEA,WAAepB"}