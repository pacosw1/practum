{"version":3,"sources":["../../src/services/area.service.ts"],"sourcesContent":["import { hash } from 'bcrypt';\nimport { Area, PrismaClient, User } from '@prisma/client';\nimport { CreateUserDto } from '@dtos/users.dto';\nimport { HttpException } from '@exceptions/HttpException';\nimport { isEmpty } from '@utils/util';\nimport { CreateAreaDto } from '@/dtos/areas.dto';\n\nclass AreaService {\n  public areas = new PrismaClient().area;\n\n  public async getAllAreas(): Promise<Area[]> {\n    const allAreas: Area[] = await this.areas.findMany();\n    return allAreas;\n  }\n\n  public async getAreaGivenId(id: number): Promise<Area> {\n    if (isEmpty(id)) throw new HttpException(400, 'id is empty');\n\n    const findArea: Area = await this.areas.findUnique({ where: { id: id } });\n    if (!findArea) throw new HttpException(409, \"Area doesn't exist\");\n\n    return findArea;\n  }\n\n  public async createArea(areaData: CreateAreaDto): Promise<Area> {\n    if (isEmpty(areaData)) throw new HttpException(400, 'userData is empty');\n\n    const findArea: Area = await this.areas.findUnique({ where: { name: areaData.name } });\n    if (findArea) throw new HttpException(409, `Area with title ${areaData.name} already exists`);\n\n    const createAreaData: Area = await this.areas.create({ data: { ...areaData } });\n    return createAreaData;\n  }\n\n  public async updateArea(id: number, data: CreateAreaDto): Promise<Area> {\n    if (isEmpty(data)) throw new HttpException(400, 'userData is empty');\n\n    const findArea: Area = await this.areas.findUnique({ where: { id: id } });\n    if (!findArea) throw new HttpException(409, \"User doesn't exist\");\n\n    const newArea = await this.areas.update({ where: { id: id }, data: { ...data } });\n    return newArea;\n  }\n\n  public async deleteArea(id: number): Promise<Area> {\n    if (isEmpty(id)) throw new HttpException(400, \"User doesn't existId\");\n\n    const findArea: Area = await this.areas.findUnique({ where: { id: id } });\n    if (!findArea) throw new HttpException(409, \"User doesn't exist\");\n\n    const deleteAreaData = await this.areas.delete({ where: { id: id } });\n    return deleteAreaData;\n  }\n}\n\nexport default AreaService;\n"],"names":["AreaService","getAllAreas","allAreas","areas","findMany","getAreaGivenId","id","isEmpty","HttpException","findArea","findUnique","where","createArea","areaData","name","createAreaData","create","data","updateArea","newArea","update","deleteArea","deleteAreaData","delete","PrismaClient","area"],"mappings":"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"}