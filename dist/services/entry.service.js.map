{"version":3,"sources":["../../src/services/entry.service.ts"],"sourcesContent":["import { Area, PrismaClient, Process, Entry, EntriesOnProcess } from '@prisma/client';\nimport { HttpException } from '@exceptions/HttpException';\nimport { isEmpty } from '@utils/util';\nimport { CreateEntryExitDto, CreateProcessDto, GetFilteredProcessesDto } from '@/dtos/process.dto';\n\nclass EntryService {\n  public entries = new PrismaClient().entry;\n\n  public async getAll(): Promise<Entry[]> {\n    const all: Entry[] = await this.entries.findMany({\n      orderBy: {\n        id: 'asc',\n      },\n      where: { active: true },\n    });\n    return all;\n  }\n\n  public async create(data: CreateEntryExitDto): Promise<Entry> {\n    if (isEmpty(data)) throw new HttpException(400, 'userData is empty');\n\n    const findEntry: Entry = await this.entries.findUnique({ where: { name: data.name } });\n    if (findEntry) throw new HttpException(409, `Process with title ${data.name} already exists`);\n\n    const createEntry: Entry = await this.entries.create({ data: { ...data } });\n    return createEntry;\n  }\n\n  public async update(id: number, data: CreateEntryExitDto): Promise<Entry> {\n    if (isEmpty(data)) throw new HttpException(400, 'userData is empty');\n\n    const findEntry: Entry = await this.entries.findUnique({ where: { id: id } });\n    if (!findEntry || (findEntry && !findEntry.active)) throw new HttpException(409, \"Entry doesn't exist\");\n\n    const newEntry = await this.entries.update({ where: { id: id }, data: { ...data } });\n    return newEntry;\n  }\n\n  public async delete(id: number): Promise<Entry> {\n    if (isEmpty(id)) throw new HttpException(400, \"User doesn't existId\");\n\n    const findEntry: Entry = await this.entries.findUnique({ where: { id: id } });\n    if (!findEntry) throw new HttpException(409, \"User doesn't exist\");\n\n    const deleted = await new PrismaClient().entriesOnProcess.deleteMany({\n      where: {\n        entryId: id,\n      },\n    });\n\n    console.log(deleted);\n\n    const deleteEntry = await this.entries.update({\n      where: { id: id },\n      data: {\n        ...findEntry,\n        active: false,\n      },\n    });\n    return deleteEntry;\n  }\n}\n\nexport default EntryService;\n"],"names":["EntryService","getAll","all","entries","findMany","orderBy","id","where","active","create","data","isEmpty","HttpException","findEntry","findUnique","name","createEntry","update","newEntry","delete","deleted","PrismaClient","entriesOnProcess","deleteMany","entryId","console","log","deleteEntry","entry"],"mappings":"AAAA;;;;+BA+DA;;aAAA;;wBA/DqE;+BACvC;sBACN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGxB,IAAA,AAAMA,eAAN,MAAMA;IAGJ,MAAaC,SAA2B;QACtC,MAAMC,MAAe,MAAM,IAAI,CAACC,OAAO,CAACC,QAAQ,CAAC;YAC/CC,SAAS;gBACPC,IAAI;YACN;YACAC,OAAO;gBAAEC,QAAQ,IAAI;YAAC;QACxB;QACA,OAAON;IACT;IAEA,MAAaO,OAAOC,IAAwB,EAAkB;QAC5D,IAAIC,IAAAA,aAAO,EAACD,OAAO,MAAM,IAAIE,4BAAa,CAAC,KAAK,qBAAqB;QAErE,MAAMC,YAAmB,MAAM,IAAI,CAACV,OAAO,CAACW,UAAU,CAAC;YAAEP,OAAO;gBAAEQ,MAAML,KAAKK,IAAI;YAAC;QAAE;QACpF,IAAIF,WAAW,MAAM,IAAID,4BAAa,CAAC,KAAK,CAAC,mBAAmB,EAAEF,KAAKK,IAAI,CAAC,eAAe,CAAC,EAAE;QAE9F,MAAMC,cAAqB,MAAM,IAAI,CAACb,OAAO,CAACM,MAAM,CAAC;YAAEC,MAAM,kBAAKA;QAAO;QACzE,OAAOM;IACT;IAEA,MAAaC,OAAOX,EAAU,EAAEI,IAAwB,EAAkB;QACxE,IAAIC,IAAAA,aAAO,EAACD,OAAO,MAAM,IAAIE,4BAAa,CAAC,KAAK,qBAAqB;QAErE,MAAMC,YAAmB,MAAM,IAAI,CAACV,OAAO,CAACW,UAAU,CAAC;YAAEP,OAAO;gBAAED,IAAIA;YAAG;QAAE;QAC3E,IAAI,CAACO,aAAcA,aAAa,CAACA,UAAUL,MAAM,EAAG,MAAM,IAAII,4BAAa,CAAC,KAAK,uBAAuB;QAExG,MAAMM,WAAW,MAAM,IAAI,CAACf,OAAO,CAACc,MAAM,CAAC;YAAEV,OAAO;gBAAED,IAAIA;YAAG;YAAGI,MAAM,kBAAKA;QAAO;QAClF,OAAOQ;IACT;IAEA,MAAaC,OAAOb,EAAU,EAAkB;QAC9C,IAAIK,IAAAA,aAAO,EAACL,KAAK,MAAM,IAAIM,4BAAa,CAAC,KAAK,wBAAwB;QAEtE,MAAMC,YAAmB,MAAM,IAAI,CAACV,OAAO,CAACW,UAAU,CAAC;YAAEP,OAAO;gBAAED,IAAIA;YAAG;QAAE;QAC3E,IAAI,CAACO,WAAW,MAAM,IAAID,4BAAa,CAAC,KAAK,sBAAsB;QAEnE,MAAMQ,UAAU,MAAM,IAAIC,oBAAY,GAAGC,gBAAgB,CAACC,UAAU,CAAC;YACnEhB,OAAO;gBACLiB,SAASlB;YACX;QACF;QAEAmB,QAAQC,GAAG,CAACN;QAEZ,MAAMO,cAAc,MAAM,IAAI,CAACxB,OAAO,CAACc,MAAM,CAAC;YAC5CV,OAAO;gBAAED,IAAIA;YAAG;YAChBI,MAAM,qCACDG;gBACHL,QAAQ,KAAK;;QAEjB;QACA,OAAOmB;IACT;;aAtDOxB,UAAU,IAAIkB,oBAAY,GAAGO,KAAK;;AAuD3C;MAEA,WAAe5B"}