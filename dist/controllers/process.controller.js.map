{"version":3,"sources":["../../src/controllers/process.controller.ts"],"sourcesContent":["import { NextFunction, Request, Response } from 'express';\nimport ProcessService from '@/services/process.service';\nimport { Process } from '@prisma/client';\nimport { CreateProcessDto } from '@/dtos/process.dto';\n\nclass ProcessController {\n  public service = new ProcessService();\n\n  public getAll = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const areas: Process[] = await this.service.getAll();\n\n      res.status(200).json({ data: areas, message: 'findAll' });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public getGivenAreaAndGroup = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const { groupId, areaId } = req.params\n      const processes: Process[] = await this.service.getGivenAreaAndGroup(Number(areaId), Number(groupId));\n\n      res.status(200).json({ data: processes, message: 'findFiltered' });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public getGivenId = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const id = Number(req.params.id);\n      const findArea: Process = await this.service.getGivenId(id);\n\n      res.status(200).json({ data: findArea, message: 'findOne' });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public create = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const data: CreateProcessDto = req.body;\n      const createAreaData: Process = await this.service.create(data);\n\n      res.status(201).json({ data: createAreaData, message: 'created' });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public update = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const id = Number(req.params.id);\n      const data: CreateProcessDto = req.body;\n      const updateUserData: Process = await this.service.update(id, data);\n\n      res.status(200).json({ data: updateUserData, message: 'updated' });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public delete = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const id = Number(req.params.id);\n      const deleteUserData: Process = await this.service.delete(id);\n\n      res.status(200).json({ data: deleteUserData, message: 'deleted' });\n    } catch (error) {\n      next(error);\n    }\n  };\n}\n\nexport default ProcessController;\n"],"names":["ProcessController","service","ProcessService","getAll","req","res","next","areas","status","json","data","message","error","getGivenAreaAndGroup","groupId","areaId","params","processes","Number","getGivenId","id","findArea","create","body","createAreaData","update","updateUserData","delete","deleteUserData"],"mappings":"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"}