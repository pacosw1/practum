{"version":3,"sources":["config/environment/index.js","providers/session/provider.jsx","providers/session/index.js","layouts/main/index.jsx","views/dashboard/addAreaDialog/index.jsx","views/dashboard/addGroupDialog/index.jsx","views/dashboard/addProcessDialog/index.jsx","views/dashboard/editAreaDialog/index.jsx","views/dashboard/editGroupDialog/index.jsx","views/dashboard/editProcessDialog/index.jsx","views/dashboard/index.jsx","views/users/components/createUser/index.jsx","views/users/components/deleteUser/index.jsx","views/users/index.jsx","views/process/index.jsx","App.jsx","config/theme.jsx","index.jsx"],"names":["client","axios","create","baseURL","withCredentials","sessionContext","createContext","SessionProvider","children","useState","isLogged","setIsLogged","user","setUser","loading","setLoading","logoutWindow","logout","post","localStorage","clear","setItem","Date","now","useEffect","fetchSession","get","then","res","data","authentication","authenticated","catch","err","Provider","value","useSession","useContext","Bar","styled","AppBar","shouldForwardProp","prop","theme","open","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","marginLeft","width","enteringScreen","LeftDrawer","Drawer","position","whiteSpace","boxSizing","overflowX","spacing","breakpoints","up","MainLayout","setOpen","toggleDrawer","navigate","useNavigate","pathname","useLocation","Box","sx","display","CssBaseline","Toolbar","pr","IconButton","edge","color","onClick","marginRight","Menu","Typography","component","variant","noWrap","flexGrow","Logout","alignItems","justifyContent","px","ChevronLeft","Divider","List","ListItemButton","selected","ListItemIcon","ListItemText","primary","Person","my","height","overflow","Container","maxWidth","mt","mb","InitialName","name","AddAreaDialog","visible","setVisible","refetch","area","setArea","closeDialog","createArea","console","log","Dialog","onClose","DialogTitle","DialogContent","Grid","container","item","xs","gutterBottom","TextField","id","type","required","onChange","e","target","fullWidth","size","margin","DialogActions","Button","disabled","AddGroupDialog","group","setGroup","createGroup","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","getStyles","l","existent","fontWeight","indexOf","InitialProcess","areaId","groupId","newEntries","existingEntries","newOutputs","existingOutputs","newTools","existingTools","description","AddProcessDialog","groups","areas","actual","setActual","process","setProcess","allEntries","setAllEntries","allOutputs","setAllOutputs","allTools","setAllTools","newEntry","setNewEntry","newOutput","setNewOutput","newTool","setNewTool","newEntriesArray","setNewEntriesArray","newOutputsArray","setNewOutputsArray","newToolsArray","setNewToolsArray","handleInputChangeEntry","handleInputChangeOutput","handleInputChangeTool","resetStates","createProcess","auxProcess","map","ent","loadEntries","loadOutputs","loadTools","undefined","String","backgroundColor","sm","flexDirection","borderRadius","p","bgcolor","FormControl","Select","event","g","MenuItem","Add","grey","align","flexWrap","gap","index","Chip","label","multiple","aux","renderValue","EditAreaDialog","areaToEdit","setAreaToEdit","editArea","put","EditGroupDialog","groupToEdit","setGroupToEdit","editGroup","find","EditProcessDialog","actualProcess","setActualProcess","updateProcess","loadProcess","entries","entry","outputs","output","tools","tool","results","newProcess","Dashboard","anchorEl","setAnchorEl","Boolean","anchorEls","setGroups","setAreas","global","setGlobal","actualCoor","setActualCoor","setEditGroup","setEditArea","editProcess","setEditProcess","addGroupDialogShow","setAddGroupDialogShow","addAreaDialogShow","setAddAreaDialogShow","addProcessDialogShow","setAddProcessDialogShow","editGroupDialogShow","setEditGroupDialogShow","editAreaDialogShow","setEditAreaDialogShow","editProcessDialogShow","setEditProcessDialogShow","loadGroups","loadAreas","loadProcesses","gro","are","pro","globalArray","forEach","a","c","curr","filter","push","createTable","currentTarget","MenuListProps","TableContainer","Table","minWidth","TableHead","TableRow","border","TableCell","Tooltip","title","placement","openEditGroupDialog","background","TableBody","left","openEditAreaDialog","scope","ga","count","length","proc","fill","InitialUser","email","password","CreateUser","newUser","setNewUser","alert","setAlert","handleClose","reason","handleInputChange","onFinish","Snackbar","autoHideDuration","Alert","severity","DeleteUser","onDelete","delete","DialogContentText","Users","createUserDialog","setCreateUserDialog","deleteUserDialog","setDeleteUserDialog","users","setUsers","selectedUser","setSelectedUser","columns","field","headerName","flex","renderCell","params","startIcon","Edit","DeleteForever","openDeleteUserDialog","row","findUsers","list","endIcon","Paper","DataGrid","autoHeight","rows","hideFooter","Process","to","App","Backdrop","CircularProgress","path","element","createTheme","palette","main","secondary","default","responsiveFontSizes","ReactDOM","createRoot","document","getElementById","render","ThemeProvider","basename"],"mappings":"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","file":"static/js/main.dbf7295d.chunk.js","sourcesContent":["import axios from \"axios\";\n\nlet inMemoryToken;\n\n// const apiUrl = process.env.REACT_APP_API_URL;\n\nconst accessToken = {\n  set: (newToken) => {\n    inMemoryToken = newToken;\n  },\n  get: () => inMemoryToken,\n};\n\nconst client = axios.create({\n  baseURL: \"/api\",\n  withCredentials: true,\n});\n\nexport { client, accessToken };\n","import React, { createContext, useEffect, useState } from \"react\";\nimport { client } from \"./../../config/environment\";\n\nconst sessionContext = createContext({});\n\nconst SessionProvider = ({ children }) => {\n  const [isLogged, setIsLogged] = useState();\n  const [user, setUser] = useState();\n  const [loading, setLoading] = useState(false);\n\n  const logoutWindow = async () => {\n    setIsLogged(false);\n  };\n\n  const logout = async () => {\n    logoutWindow();\n    await client.post(\"auth/logout\");\n    localStorage.clear();\n    localStorage.setItem(\"logout\", Date.now()); // Force logout on every tab\n  };\n\n  useEffect(() => {\n    const fetchSession = async () => {\n      await client.get(\"auth\").then((res) => {\n        const data = res?.data?.data?.data;\n        const authentication = res?.data?.data?.authenticated;\n        setIsLogged(authentication);\n        setUser(data);\n        setLoading(false);\n      });\n    };\n\n    setLoading(true);\n    fetchSession().catch((err) => {\n      setLoading(false);\n    });\n  }, []);\n\n  return (\n    <sessionContext.Provider\n      value={{\n        isLogged,\n        setIsLogged,\n        user,\n        logout,\n        loading,\n      }}\n    >\n      {children}\n    </sessionContext.Provider>\n  );\n};\n\nexport { sessionContext };\nexport default SessionProvider;\n","import { useContext } from \"react\";\nimport SessionProvider, { sessionContext } from \"./provider\";\n\nconst useSession = () => useContext(sessionContext);\n\nexport { useSession, SessionProvider };\n","import {\n  ChevronLeft,\n  Dashboard,\n  Logout,\n  Menu,\n  Person,\n} from \"@mui/icons-material\";\nimport {\n  AppBar,\n  Box,\n  Container,\n  Divider,\n  Drawer,\n  IconButton,\n  List,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  styled,\n  Toolbar,\n  Typography,\n} from \"@mui/material\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport React, { useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useSession } from \"../../providers/session\";\n\nconst drawerWidth = 240;\n\nconst Bar = styled(AppBar, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create([\"width\", \"margin\"], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst LeftDrawer = styled(Drawer, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  \"& .MuiDrawer-paper\": {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    boxSizing: \"border-box\",\n    ...(!open && {\n      overflowX: \"hidden\",\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      width: theme.spacing(7),\n      [theme.breakpoints.up(\"sm\")]: {\n        width: theme.spacing(9),\n      },\n    }),\n  },\n}));\n\nconst MainLayout = ({ children }) => {\n  const { logout } = useSession();\n  const [open, setOpen] = useState(false);\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n\n  let navigate = useNavigate();\n  const { pathname } = useLocation();\n\n  return (\n    <Box sx={{ display: \"flex\" }}>\n      <CssBaseline />\n      <Bar position='absolute' open={open}>\n        <Toolbar\n          sx={{\n            pr: \"24px\", // keep right padding when drawer closed\n          }}\n        >\n          <IconButton\n            edge='start'\n            color='inherit'\n            aria-label='open drawer'\n            onClick={toggleDrawer}\n            sx={{\n              marginRight: \"36px\",\n              ...(open && { display: \"none\" }),\n            }}\n          >\n            <Menu />\n          </IconButton>\n          <Typography\n            component='h1'\n            variant='h6'\n            color='inherit'\n            noWrap\n            sx={{ flexGrow: 1 }}\n          >\n            Practum Process Manager\n          </Typography>\n          <IconButton onClick={logout}>\n            <Logout color='secondary' />\n          </IconButton>\n        </Toolbar>\n      </Bar>\n      <LeftDrawer variant='permanent' open={open}>\n        <Toolbar\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"flex-end\",\n            px: [1],\n          }}\n        >\n          <IconButton onClick={toggleDrawer}>\n            <ChevronLeft />\n          </IconButton>\n        </Toolbar>\n        <Divider />\n        <List component='nav'>\n          <ListItemButton\n            selected={\"/dashboard\" === pathname}\n            onClick={() => {\n              navigate(\"/dashboard\");\n            }}\n          >\n            <ListItemIcon>\n              <Dashboard />\n            </ListItemIcon>\n            <ListItemText primary='Dashboard' />\n          </ListItemButton>\n          <ListItemButton\n            selected={\"/users\" === pathname}\n            onClick={() => {\n              navigate(\"/users\");\n            }}\n          >\n            <ListItemIcon>\n              <Person />\n            </ListItemIcon>\n            <ListItemText primary='Usuarios' />\n          </ListItemButton>\n          <Divider sx={{ my: 1 }} />\n        </List>\n      </LeftDrawer>\n      <Box\n        component='main'\n        sx={{\n          flexGrow: 1,\n          height: \"100vh\",\n          overflow: \"auto\",\n        }}\n      >\n        <Toolbar />\n\n        <Container maxWidth='lg' sx={{ mt: 4, mb: 4 }}>\n          {children}\n        </Container>\n      </Box>\n    </Box>\n  );\n};\n\nexport default MainLayout;\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { client } from \"../../../config/environment\";\n\nconst InitialName = {\n  name: \"\",\n};\n\nconst AddAreaDialog = ({ visible, setVisible, refetch }) => {\n  const [area, setArea] = useState(InitialName);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n\n    setArea({\n      ...area,\n      [name]: value,\n    });\n  };\n\n  const closeDialog = () => {\n    setVisible(false);\n    refetch();\n    setArea(InitialName);\n  };\n\n  const createArea = async () => {\n    try {\n      await client.post(\"areas\", area);\n      refetch();\n      closeDialog();\n    } catch (error) {\n      console.log(\"🚀 ~ file: index.jsx ~ line 45 ~ onFinish ~ error\", error);\n    }\n  };\n\n  return (\n    <Dialog open={visible} onClose={closeDialog}>\n      <DialogTitle>Crear Area</DialogTitle>\n      <DialogContent>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Typography variant='caption' display='block' gutterBottom>\n              Nombre de Area:\n            </Typography>\n            <TextField\n              id='name'\n              name='name'\n              type='text'\n              required\n              value={area.name}\n              onChange={handleInputChange}\n              fullWidth\n              size='small'\n              margin='dense'\n            />\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button color='error' variant='contained' onClick={closeDialog}>\n          Cancelar\n        </Button>\n        <Button\n          color='success'\n          variant='contained'\n          onClick={createArea}\n          disabled={area.name === \"\" ? true : false}\n        >\n          Crear\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default AddAreaDialog;\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { client } from \"../../../config/environment\";\n\nconst InitialName = {\n  name: \"\",\n};\n\nconst AddGroupDialog = ({ visible, setVisible, refetch }) => {\n  const [group, setGroup] = useState(InitialName);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n\n    setGroup({\n      ...group,\n      [name]: value,\n    });\n  };\n\n  const closeDialog = () => {\n    setVisible(false);\n    refetch();\n    setGroup(InitialName);\n  };\n\n  const createGroup = async () => {\n    try {\n      await client.post(\"groups\", group);\n      refetch();\n      closeDialog();\n    } catch (error) {\n      console.log(\"🚀 ~ file: index.jsx ~ line 45 ~ onFinish ~ error\", error);\n    }\n  };\n\n  return (\n    <Dialog open={visible} onClose={closeDialog}>\n      <DialogTitle>Crear grupo</DialogTitle>\n      <DialogContent>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Typography variant='caption' display='block' gutterBottom>\n              Nombre de Grupo:\n            </Typography>\n            <TextField\n              id='name'\n              name='name'\n              type='text'\n              required\n              value={group.name}\n              onChange={handleInputChange}\n              fullWidth\n              size='small'\n              margin='dense'\n            />\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button color='error' variant='contained' onClick={closeDialog}>\n          Cancelar\n        </Button>\n        <Button\n          color='success'\n          variant='contained'\n          onClick={createGroup}\n          disabled={group.name === \"\" ? true : false}\n        >\n          Crear\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default AddGroupDialog;\n","import { Add } from \"@mui/icons-material\";\nimport {\n  Box,\n  Button,\n  Chip,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControl,\n  FormHelperText,\n  Grid,\n  IconButton,\n  InputLabel,\n  MenuItem,\n  OutlinedInput,\n  Select,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { grey } from \"@mui/material/colors\";\nimport React, { useEffect, useState } from \"react\";\nimport { client } from \"../../../config/environment\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nfunction getStyles(l, existent) {\n  return {\n    fontWeight: existent.indexOf(l) === -1 ? 500 : 600,\n  };\n}\n\nconst InitialProcess = {\n  name: \"\",\n  areaId: \"\",\n  groupId: \"\",\n  newEntries: [],\n  existingEntries: [],\n  newOutputs: [],\n  existingOutputs: [],\n  newTools: [],\n  existingTools: [],\n};\n\nconst InitialName = {\n  name: \"\",\n  description: \"\",\n};\n\nconst AddProcessDialog = ({\n  visible,\n  setVisible,\n  refetch,\n  groups,\n  areas,\n  actual,\n  setActual,\n}) => {\n  const [process, setProcess] = useState(InitialProcess);\n\n  const [allEntries, setAllEntries] = useState([]);\n  const [allOutputs, setAllOutputs] = useState([]);\n  const [allTools, setAllTools] = useState([]);\n\n  const [newEntry, setNewEntry] = useState(InitialName);\n  const [newOutput, setNewOutput] = useState(InitialName);\n  const [newTool, setNewTool] = useState(InitialName);\n\n  const [newEntriesArray, setNewEntriesArray] = useState([]);\n  const [newOutputsArray, setNewOutputsArray] = useState([]);\n  const [newToolsArray, setNewToolsArray] = useState([]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n\n    setProcess({\n      ...process,\n      [name]: value,\n    });\n  };\n\n  const handleChangeEntry = (event) => {\n    const aux = event.target.value;\n    console.log(\"aux\", aux);\n    setProcess({ ...process, existingEntries: aux });\n  };\n\n  const handleChangeOutput = (event) => {\n    const aux = event.target.value;\n    setProcess({ ...process, existingOutputs: aux });\n  };\n\n  const handleChangeTool = (event) => {\n    const aux = event.target.value;\n    setProcess({ ...process, existingTools: aux });\n  };\n\n  const handleInputChangeEntry = (e) => {\n    const { name, value } = e.target;\n\n    setNewEntry({\n      ...newEntry,\n      [name]: value,\n    });\n  };\n\n  const handleInputChangeOutput = (e) => {\n    const { name, value } = e.target;\n\n    setNewOutput({\n      ...newOutput,\n      [name]: value,\n    });\n  };\n\n  const handleInputChangeTool = (e) => {\n    const { name, value } = e.target;\n\n    setNewTool({\n      ...newTool,\n      [name]: value,\n    });\n  };\n\n  const saveNewEntry = () => {\n    setNewEntriesArray([...newEntriesArray, newEntry]);\n    setNewEntry(InitialName);\n  };\n\n  const saveNewOutput = () => {\n    setNewOutputsArray([...newOutputsArray, newOutput]);\n    setNewOutput(InitialName);\n  };\n\n  const saveNewTool = () => {\n    setNewToolsArray([...newToolsArray, newTool]);\n    setNewTool(InitialName);\n  };\n\n  const closeDialog = () => {\n    setVisible(false);\n    refetch();\n    resetStates();\n  };\n\n  const resetStates = () => {\n    setActual();\n    setProcess(InitialProcess);\n    setAllEntries([]);\n    setAllOutputs([]);\n    setAllTools([]);\n    setNewEntry(InitialName);\n    setNewOutput(InitialName);\n    setNewTool(InitialName);\n    setNewEntriesArray([]);\n    setNewOutputsArray([]);\n    setNewToolsArray([]);\n  };\n\n  const createProcess = async () => {\n    let auxProcess = process;\n    auxProcess.existingEntries = process.existingEntries.map((ent) => {\n      return ent.id;\n    });\n\n    auxProcess.existingOutputs = process.existingOutputs.map((ent) => {\n      return ent.id;\n    });\n\n    auxProcess.existingTools = process.existingTools.map((ent) => {\n      return ent.id;\n    });\n\n    auxProcess.newEntries = newEntriesArray;\n    auxProcess.newOutputs = newOutputsArray;\n    auxProcess.newTools = newToolsArray;\n\n    try {\n      await client.post(\"process\", auxProcess);\n      refetch();\n      closeDialog();\n    } catch (error) {\n      console.log(\"🚀 ~ file: index.jsx ~ line 45 ~ onFinish ~ error\", error);\n    }\n  };\n\n  const loadEntries = async () => {\n    try {\n      await client.get(\"entries\").then((res) => {\n        let e = res?.data?.data;\n        setAllEntries(e);\n      });\n    } catch (error) {\n      console.log(\"🚀 ~ file: index.jsx ~ line 45 ~ onFinish ~ error\", error);\n    }\n  };\n\n  const loadOutputs = async () => {\n    try {\n      await client.get(\"outputs\").then((res) => {\n        let e = res?.data?.data;\n        setAllOutputs(e);\n      });\n    } catch (error) {\n      console.log(\"🚀 ~ file: index.jsx ~ line 45 ~ onFinish ~ error\", error);\n    }\n  };\n\n  const loadTools = async () => {\n    try {\n      await client.get(\"tools\").then((res) => {\n        let e = res?.data?.data;\n        setAllTools(e);\n      });\n    } catch (error) {\n      console.log(\"🚀 ~ file: index.jsx ~ line 45 ~ onFinish ~ error\", error);\n    }\n  };\n\n  useEffect(() => {\n    if (actual !== undefined) {\n      loadEntries();\n      loadOutputs();\n      loadTools();\n\n      setProcess({\n        ...process,\n        areaId: String(actual?.area),\n        groupId: String(actual?.group),\n      });\n    }\n  }, [visible, actual]);\n\n  return (\n    <Dialog\n      open={visible}\n      onClose={closeDialog}\n      maxWidth='xl'\n      PaperProps={{\n        style: {\n          backgroundColor: \"#F5F5F5\",\n        },\n      }}\n    >\n      <DialogTitle>Crear Proceso</DialogTitle>\n      <DialogContent>\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={6}>\n            <Box\n              sx={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                borderRadius: 1,\n                p: 2,\n                bgcolor: \"white\",\n              }}\n            >\n              <Typography variant='caption' display='block' gutterBottom>\n                Nombre de Proceso:\n              </Typography>\n              <TextField\n                id='name'\n                name='name'\n                type='text'\n                required\n                value={process.name}\n                onChange={handleInputChange}\n                size='small'\n                margin='dense'\n                fullWidth\n              />\n            </Box>\n          </Grid>\n\n          <Grid item xs={6} sm={3}>\n            <Box\n              sx={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                borderRadius: 2,\n                p: 2,\n                bgcolor: \"white\",\n              }}\n            >\n              <Typography variant='caption' display='block' gutterBottom>\n                Grupo:\n              </Typography>\n              <FormControl>\n                <Select\n                  value={process.groupId}\n                  onChange={(event) => {\n                    setProcess({ ...process, groupId: event.target.value });\n                  }}\n                >\n                  {groups.map((g) => (\n                    <MenuItem key={g.id} value={String(g?.id)}>\n                      {g?.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Box>\n          </Grid>\n\n          <Grid item xs={6} sm={3}>\n            <Box\n              sx={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                borderRadius: 2,\n                p: 2,\n                bgcolor: \"white\",\n              }}\n            >\n              <Typography variant='caption' display='block' gutterBottom>\n                Grupo:\n              </Typography>\n              <FormControl>\n                <Select\n                  value={process.areaId}\n                  onChange={(event) => {\n                    setProcess({ ...process, areaId: event.target.value });\n                  }}\n                >\n                  {areas.map((g) => (\n                    <MenuItem key={g.id} value={String(g?.id)}>\n                      {g?.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Box>\n          </Grid>\n\n          <Grid item xs={12} sm={4}>\n            <Box\n              sx={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                borderRadius: 2,\n                p: 2,\n                bgcolor: \"white\",\n              }}\n            >\n              <Box\n                sx={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Typography fontWeight={600}>Entradas</Typography>\n                <IconButton\n                  disabled={!(newEntry.name && newEntry.description)}\n                  onClick={saveNewEntry}\n                >\n                  <Add />\n                </IconButton>\n              </Box>\n\n              <Typography variant='caption' display='block' gutterBottom>\n                Nombre:\n              </Typography>\n              <TextField\n                id='name'\n                name='name'\n                type='text'\n                required\n                value={newEntry.name}\n                onChange={handleInputChangeEntry}\n                size='small'\n                margin='dense'\n                fullWidth\n              />\n\n              <Typography variant='caption' display='block' gutterBottom>\n                Descripcion:\n              </Typography>\n              <TextField\n                id='description'\n                name='description'\n                type='text'\n                required\n                value={newEntry.description}\n                onChange={handleInputChangeEntry}\n                size='small'\n                margin='dense'\n                fullWidth\n              />\n\n              <Typography\n                variant='caption'\n                fontWeight={600}\n                color={grey[400]}\n                align='right'\n              >\n                Entradas agregadas manualmente\n              </Typography>\n\n              <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 0.5, p: 2 }}>\n                {newEntriesArray.map((value, index) => (\n                  <Chip\n                    key={index}\n                    label={value.name}\n                    sx={{ fontWeight: 600 }}\n                  />\n                ))}\n              </Box>\n\n              <Typography variant='caption' display='block' gutterBottom>\n                Entradas existentes:\n              </Typography>\n              <FormControl>\n                <Select\n                  multiple\n                  value={process.existingEntries}\n                  onChange={handleChangeEntry}\n                  renderValue={(selected) => (\n                    <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 0.5 }}>\n                      {selected.map((value) => (\n                        <Chip key={value.id} label={value.name} />\n                      ))}\n                    </Box>\n                  )}\n                  MenuProps={MenuProps}\n                >\n                  {allEntries.map((e) => (\n                    <MenuItem\n                      key={e.id}\n                      value={e}\n                      style={getStyles(e, process.existingEntries)}\n                    >\n                      {e.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Box>\n          </Grid>\n\n          <Grid item xs={12} sm={4}>\n            <Box\n              sx={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                borderRadius: 2,\n                p: 2,\n                bgcolor: \"white\",\n              }}\n            >\n              <Box\n                sx={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Typography fontWeight={600}>Salidas</Typography>\n                <IconButton\n                  disabled={!(newOutput.name && newOutput.description)}\n                  onClick={saveNewOutput}\n                >\n                  <Add />\n                </IconButton>\n              </Box>\n\n              <Typography variant='caption' display='block' gutterBottom>\n                Nombre:\n              </Typography>\n              <TextField\n                id='name'\n                name='name'\n                type='text'\n                required\n                value={newOutput.name}\n                onChange={handleInputChangeOutput}\n                size='small'\n                margin='dense'\n                fullWidth\n              />\n\n              <Typography variant='caption' display='block' gutterBottom>\n                Descripcion:\n              </Typography>\n              <TextField\n                id='description'\n                name='description'\n                type='text'\n                required\n                value={newOutput.description}\n                onChange={handleInputChangeOutput}\n                size='small'\n                margin='dense'\n                fullWidth\n              />\n\n              <Typography\n                variant='caption'\n                fontWeight={600}\n                color={grey[400]}\n                align='right'\n              >\n                Salidas agregadas manualmente\n              </Typography>\n\n              <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 0.5, p: 2 }}>\n                {newOutputsArray.map((value, index) => (\n                  <Chip\n                    key={index}\n                    label={value.name}\n                    sx={{ fontWeight: 600 }}\n                  />\n                ))}\n              </Box>\n\n              <Typography variant='caption' display='block' gutterBottom>\n                Salidas existentes:\n              </Typography>\n\n              <FormControl>\n                <Select\n                  multiple\n                  value={process.existingOutputs}\n                  onChange={handleChangeOutput}\n                  renderValue={(selected) => (\n                    <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 0.5 }}>\n                      {selected.map((value) => (\n                        <Chip key={value.id} label={value.name} />\n                      ))}\n                    </Box>\n                  )}\n                  MenuProps={MenuProps}\n                >\n                  {allOutputs.map((e) => (\n                    <MenuItem\n                      key={e.id}\n                      value={e}\n                      style={getStyles(e, process.existingOutputs)}\n                    >\n                      {e.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Box>\n          </Grid>\n\n          <Grid item xs={12} sm={4}>\n            <Box\n              sx={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                borderRadius: 2,\n                p: 2,\n                bgcolor: \"white\",\n              }}\n            >\n              <Box\n                sx={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Typography fontWeight={600}>Herramientas</Typography>\n                <IconButton\n                  disabled={!(newTool.name && newTool.description)}\n                  onClick={saveNewTool}\n                >\n                  <Add />\n                </IconButton>\n              </Box>\n\n              <Typography variant='caption' display='block' gutterBottom>\n                Nombre:\n              </Typography>\n              <TextField\n                id='name'\n                name='name'\n                type='text'\n                required\n                value={newTool.name}\n                onChange={handleInputChangeTool}\n                size='small'\n                margin='dense'\n                fullWidth\n              />\n\n              <Typography variant='caption' display='block' gutterBottom>\n                Descripcion:\n              </Typography>\n              <TextField\n                id='description'\n                name='description'\n                type='text'\n                required\n                value={newTool.description}\n                onChange={handleInputChangeTool}\n                size='small'\n                margin='dense'\n              />\n\n              <Typography\n                variant='caption'\n                fontWeight={600}\n                color={grey[400]}\n                align='right'\n              >\n                Herramientas agregadas manualmente\n              </Typography>\n\n              <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 0.5, p: 2 }}>\n                {newToolsArray.map((value, index) => (\n                  <Chip\n                    key={index}\n                    label={value.name}\n                    sx={{ fontWeight: 600 }}\n                  />\n                ))}\n              </Box>\n\n              <Typography variant='caption' display='block' gutterBottom>\n                Herramientas existentes:\n              </Typography>\n              <FormControl>\n                <Select\n                  multiple\n                  value={process.existingTools}\n                  onChange={handleChangeTool}\n                  renderValue={(selected) => (\n                    <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 0.5 }}>\n                      {selected.map((value) => (\n                        <Chip key={value.id} label={value.name} />\n                      ))}\n                    </Box>\n                  )}\n                  MenuProps={MenuProps}\n                >\n                  {allTools.map((e) => (\n                    <MenuItem\n                      key={e.id}\n                      value={e}\n                      style={getStyles(e, process.existingTools)}\n                    >\n                      {e.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Box>\n          </Grid>\n\n          {/*  <Grid item xs={6}>\n            <FormControl sx={{ m: 1, width: 300 }}>\n              <InputLabel id='demo-multiple-chip-label'>Chip</InputLabel>\n              <Select\n                labelId='demo-multiple-chip-label'\n                id='demo-multiple-chip'\n                multiple\n                value={personName}\n                onChange={handleChange}\n                input={<OutlinedInput id='select-multiple-chip' label='Chip' />}\n                renderValue={(selected) => (\n                  <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 0.5 }}>\n                    {selected.map((value) => (\n                      <Chip key={value} label={value} />\n                    ))}\n                  </Box>\n                )}\n                MenuProps={MenuProps}\n              >\n                {names.map((name) => (\n                  <MenuItem\n                    key={name}\n                    value={name}\n                    style={getStyles(name, personName)}\n                  >\n                    {name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid> */}\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button color='error' variant='contained' onClick={closeDialog}>\n          Cancelar\n        </Button>\n        <Button\n          color='success'\n          variant='contained'\n          onClick={createProcess}\n          disabled={\n            process.name === \"\" ||\n            process.groupId === \"\" ||\n            process.areaId === \"\"\n              ? true\n              : false\n          }\n        >\n          Crear\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default AddProcessDialog;\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { client } from \"../../../config/environment\";\n\nconst InitialName = {\n  name: \"\",\n};\n\nconst EditAreaDialog = ({\n  visible,\n  setVisible,\n  refetch,\n  areaToEdit,\n  setAreaToEdit,\n}) => {\n  const [area, setArea] = useState(InitialName);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n\n    setArea({\n      ...area,\n      [name]: value,\n    });\n  };\n\n  const closeDialog = () => {\n    setVisible(false);\n    refetch();\n    setArea(InitialName);\n    setAreaToEdit();\n  };\n\n  const editArea = async () => {\n    try {\n      await client.put(`areas/${areaToEdit.id}`, area);\n      refetch();\n      closeDialog();\n    } catch (error) {\n      console.log(\"🚀 ~ file: index.jsx ~ line 45 ~ onFinish ~ error\", error);\n    }\n  };\n\n  useEffect(() => {\n    if (visible === true) {\n      setArea({ ...area, name: areaToEdit.name });\n    }\n  }, [visible, areaToEdit]);\n\n  return (\n    <Dialog open={visible} onClose={closeDialog}>\n      <DialogTitle>Editar area</DialogTitle>\n      <DialogContent>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Typography variant='caption' display='block' gutterBottom>\n              Nombre de Area:\n            </Typography>\n            <TextField\n              id='name'\n              name='name'\n              type='text'\n              required\n              value={area.name}\n              onChange={handleInputChange}\n              fullWidth\n              size='small'\n              margin='dense'\n            />\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button color='error' variant='contained' onClick={closeDialog}>\n          Cancelar\n        </Button>\n        <Button\n          color='success'\n          variant='contained'\n          onClick={editArea}\n          disabled={area.name === \"\" ? true : false}\n        >\n          Actualizar\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default EditAreaDialog;\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { client } from \"../../../config/environment\";\n\nconst InitialName = {\n  name: \"\",\n};\n\nconst EditGroupDialog = ({\n  visible,\n  setVisible,\n  refetch,\n  groupToEdit,\n  setGroupToEdit,\n}) => {\n  const [group, setGroup] = useState(InitialName);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n\n    setGroup({\n      ...group,\n      [name]: value,\n    });\n  };\n\n  const closeDialog = () => {\n    setVisible(false);\n    refetch();\n    setGroup(InitialName);\n    setGroupToEdit();\n  };\n\n  const editGroup = async () => {\n    try {\n      await client.put(`groups/${groupToEdit.id}`, group);\n      refetch();\n      closeDialog();\n    } catch (error) {\n      console.log(\"🚀 ~ file: index.jsx ~ line 45 ~ onFinish ~ error\", error);\n    }\n  };\n\n  useEffect(() => {\n    if (visible === true) {\n      setGroup({ ...group, name: groupToEdit.name });\n    }\n  }, [visible, groupToEdit]);\n\n  return (\n    <Dialog open={visible} onClose={closeDialog}>\n      <DialogTitle>Editar grupo</DialogTitle>\n      <DialogContent>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Typography variant='caption' display='block' gutterBottom>\n              Nombre de Grupo:\n            </Typography>\n            <TextField\n              id='name'\n              name='name'\n              type='text'\n              required\n              value={group.name}\n              onChange={handleInputChange}\n              fullWidth\n              size='small'\n              margin='dense'\n            />\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button color='error' variant='contained' onClick={closeDialog}>\n          Cancelar\n        </Button>\n        <Button\n          color='success'\n          variant='contained'\n          onClick={editGroup}\n          disabled={group.name === \"\" ? true : false}\n        >\n          Actualizar\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default EditGroupDialog;\n","import { Add } from \"@mui/icons-material\";\nimport {\n  Box,\n  Button,\n  Chip,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControl,\n  FormHelperText,\n  Grid,\n  IconButton,\n  InputLabel,\n  MenuItem,\n  OutlinedInput,\n  Select,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { grey } from \"@mui/material/colors\";\nimport React, { useEffect, useState } from \"react\";\nimport { client } from \"../../../config/environment\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nfunction getStyles(id, existent) {\n  return {\n    fontWeight: existent.find((item) => item.id === id) ? 600 : 500,\n  };\n}\n\nconst InitialProcess = {\n  name: \"\",\n  areaId: \"\",\n  groupId: \"\",\n  newEntries: [],\n  existingEntries: [],\n  newOutputs: [],\n  existingOutputs: [],\n  newTools: [],\n  existingTools: [],\n};\n\nconst InitialName = {\n  name: \"\",\n  description: \"\",\n};\n\nconst EditProcessDialog = ({ visible, setVisible, refetch, actualProcess, setActualProcess }) => {\n  const [process, setProcess] = useState(InitialProcess);\n\n  const [allEntries, setAllEntries] = useState([]);\n  const [allOutputs, setAllOutputs] = useState([]);\n  const [allTools, setAllTools] = useState([]);\n\n  const [newEntry, setNewEntry] = useState(InitialName);\n  const [newOutput, setNewOutput] = useState(InitialName);\n  const [newTool, setNewTool] = useState(InitialName);\n\n  const [newEntriesArray, setNewEntriesArray] = useState([]);\n  const [newOutputsArray, setNewOutputsArray] = useState([]);\n  const [newToolsArray, setNewToolsArray] = useState([]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n\n    setProcess({\n      ...process,\n      [name]: value,\n    });\n  };\n\n  const handleChangeEntry = (event) => {\n    const aux = event.target.value;\n\n    let results = aux.map((item) => {\n      return allEntries[item - 1];\n    });\n\n    let newProcess = { ...process, existingEntries: [...results] };\n\n    console.log(process.existingEntries);\n    console.log(\"aux\", aux);\n    setProcess(newProcess);\n  };\n\n  const handleChangeOutput = (event) => {\n    const aux = event.target.value;\n    setProcess({ ...process, existingOutputs: aux });\n  };\n\n  const handleChangeTool = (event) => {\n    const aux = event.target.value;\n    setProcess({ ...process, existingTools: aux });\n  };\n\n  const handleInputChangeEntry = (e) => {\n    const { name, value } = e.target;\n\n    setNewEntry({\n      ...newEntry,\n      [name]: value,\n    });\n  };\n\n  const handleInputChangeOutput = (e) => {\n    const { name, value } = e.target;\n\n    setNewOutput({\n      ...newOutput,\n      [name]: value,\n    });\n  };\n\n  const handleInputChangeTool = (e) => {\n    const { name, value } = e.target;\n\n    setNewTool({\n      ...newTool,\n      [name]: value,\n    });\n  };\n\n  const saveNewEntry = () => {\n    setNewEntriesArray([...newEntriesArray, newEntry]);\n    setNewEntry(InitialName);\n  };\n\n  const saveNewOutput = () => {\n    setNewOutputsArray([...newOutputsArray, newOutput]);\n    setNewOutput(InitialName);\n  };\n\n  const saveNewTool = () => {\n    setNewToolsArray([...newToolsArray, newTool]);\n    setNewTool(InitialName);\n  };\n\n  const closeDialog = () => {\n    setVisible(false);\n    refetch();\n    resetStates();\n  };\n\n  const resetStates = () => {\n    setActualProcess();\n    setProcess(InitialProcess);\n    setAllEntries([]);\n    setAllOutputs([]);\n    setAllTools([]);\n    setNewEntry(InitialName);\n    setNewOutput(InitialName);\n    setNewTool(InitialName);\n    setNewEntriesArray([]);\n    setNewOutputsArray([]);\n    setNewToolsArray([]);\n  };\n\n  const updateProcess = async () => {\n    let auxProcess = process;\n    auxProcess.existingEntries = process.existingEntries.map((ent) => {\n      return ent.id;\n    });\n\n    auxProcess.existingOutputs = process.existingOutputs.map((ent) => {\n      return ent.id;\n    });\n\n    auxProcess.existingTools = process.existingTools.map((ent) => {\n      return ent.id;\n    });\n\n    auxProcess.newEntries = newEntriesArray;\n    auxProcess.newOutputs = newOutputsArray;\n    auxProcess.newTools = newToolsArray;\n\n    try {\n      await client.put(`process/${actualProcess.id}`, auxProcess);\n      refetch();\n      closeDialog();\n    } catch (error) {\n      console.log(\"🚀 ~ file: index.jsx ~ line 45 ~ onFinish ~ error\", error);\n    }\n  };\n\n  const loadEntries = async () => {\n    try {\n      await client.get(\"entries\").then((res) => {\n        let e = res?.data?.data;\n        setAllEntries(e);\n      });\n    } catch (error) {\n      console.log(\"🚀 ~ file: index.jsx ~ line 45 ~ onFinish ~ error\", error);\n    }\n  };\n\n  const loadOutputs = async () => {\n    try {\n      await client.get(\"outputs\").then((res) => {\n        let e = res?.data?.data;\n        setAllOutputs(e);\n      });\n    } catch (error) {\n      console.log(\"🚀 ~ file: index.jsx ~ line 45 ~ onFinish ~ error\", error);\n    }\n  };\n\n  const loadTools = async () => {\n    try {\n      await client.get(\"tools\").then((res) => {\n        let e = res?.data?.data;\n        setAllTools(e);\n      });\n    } catch (error) {\n      console.log(\"🚀 ~ file: index.jsx ~ line 45 ~ onFinish ~ error\", error);\n    }\n  };\n\n  const loadProcess = async () => {\n    try {\n      await client.get(`process/${actualProcess?.id}`).then((res) => {\n        let p = res?.data?.data;\n\n        p.entries = p.entries.map((entry) => {\n          return {\n            id: entry.entry.id,\n            name: entry.entry.name,\n            description: entry.entry.description,\n          };\n        });\n\n        p.outputs = p.outputs.map((output) => {\n          return {\n            id: output.output.id,\n            name: output.output.name,\n            description: output.output.description,\n          };\n        });\n\n        p.tools = p.tools.map((tool) => {\n          return {\n            id: tool.tool.id,\n            name: tool.tool.name,\n            description: tool.tool.description,\n          };\n        });\n\n        setProcess({\n          ...process,\n          name: p.name,\n          groupId: String(p.groupId),\n          areaId: String(p.areaId),\n          existingEntries: p.entries,\n          existingOutputs: p.outputs,\n          existingTools: p.tools,\n        });\n      });\n    } catch (error) {\n      console.log(\"🚀 ~ file: index.jsx ~ line 45 ~ onFinish ~ error\", error);\n    }\n  };\n\n  useEffect(() => {\n    if (actualProcess !== undefined && visible) {\n      loadProcess();\n      loadEntries();\n      loadOutputs();\n      loadTools();\n    }\n  }, [visible, actualProcess]);\n\n  useEffect(() => {\n    // console.log(\"en\", allEntries);\n    // console.log(\"ex\", process.existingEntries);\n  }, [process]);\n\n  return (\n    <Dialog\n      open={visible}\n      onClose={closeDialog}\n      maxWidth=\"xl\"\n      PaperProps={{\n        style: {\n          backgroundColor: \"#F5F5F5\",\n        },\n      }}\n    >\n      <DialogTitle>Editar Proceso</DialogTitle>\n      <DialogContent>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Box\n              sx={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                borderRadius: 1,\n                p: 2,\n                bgcolor: \"white\",\n              }}\n            >\n              <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                Nombre de Proceso:\n              </Typography>\n              <TextField id=\"name\" name=\"name\" type=\"text\" required value={process.name} onChange={handleInputChange} size=\"small\" margin=\"dense\" fullWidth />\n            </Box>\n          </Grid>\n\n          <Grid item xs={12} sm={4}>\n            <Box\n              sx={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                borderRadius: 2,\n                p: 2,\n                bgcolor: \"white\",\n              }}\n            >\n              <Box\n                sx={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Typography fontWeight={600}>Entradas</Typography>\n                <IconButton disabled={!(newEntry.name && newEntry.description)} onClick={saveNewEntry}>\n                  <Add />\n                </IconButton>\n              </Box>\n\n              <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                Nombre:\n              </Typography>\n              <TextField id=\"name\" name=\"name\" type=\"text\" required value={newEntry.name} onChange={handleInputChangeEntry} size=\"small\" margin=\"dense\" fullWidth />\n\n              <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                Descripcion:\n              </Typography>\n              <TextField id=\"description\" name=\"description\" type=\"text\" required value={newEntry.description} onChange={handleInputChangeEntry} size=\"small\" margin=\"dense\" fullWidth />\n\n              <Typography variant=\"caption\" fontWeight={600} color={grey[400]} align=\"right\">\n                Entradas agregadas manualmente\n              </Typography>\n\n              <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 0.5, p: 2 }}>\n                {newEntriesArray.map((value, index) => (\n                  <Chip key={index} label={value.name} sx={{ fontWeight: 600 }} />\n                ))}\n              </Box>\n\n              <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                Entradas existentes:\n              </Typography>\n              <FormControl>\n                <Select\n                  multiple\n                  value={process.existingEntries.map((entry) => entry.id)}\n                  onChange={handleChangeEntry}\n                  renderValue={(selected) => (\n                    <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 0.5 }}>\n                      {selected.map((id) => {\n                        let entry = process.existingEntries.find((entry) => entry.id === id);\n                        return <Chip key={id} label={entry.name} />;\n                      })}\n                    </Box>\n                  )}\n                  MenuProps={MenuProps}\n                >\n                  {allEntries.map((e) => (\n                    <MenuItem key={e.id} value={e.id} style={getStyles(e.id, process.existingEntries)}>\n                      {e.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Box>\n          </Grid>\n\n          <Grid item xs={12} sm={4}>\n            <Box\n              sx={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                borderRadius: 2,\n                p: 2,\n                bgcolor: \"white\",\n              }}\n            >\n              <Box\n                sx={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Typography fontWeight={600}>Salidas</Typography>\n                <IconButton disabled={!(newOutput.name && newOutput.description)} onClick={saveNewOutput}>\n                  <Add />\n                </IconButton>\n              </Box>\n\n              <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                Nombre:\n              </Typography>\n              <TextField id=\"name\" name=\"name\" type=\"text\" required value={newOutput.name} onChange={handleInputChangeOutput} size=\"small\" margin=\"dense\" fullWidth />\n\n              <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                Descripcion:\n              </Typography>\n              <TextField id=\"description\" name=\"description\" type=\"text\" required value={newOutput.description} onChange={handleInputChangeOutput} size=\"small\" margin=\"dense\" fullWidth />\n\n              <Typography variant=\"caption\" fontWeight={600} color={grey[400]} align=\"right\">\n                Salidas agregadas manualmente\n              </Typography>\n\n              <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 0.5, p: 2 }}>\n                {newOutputsArray.map((value, index) => (\n                  <Chip key={index} label={value.name} sx={{ fontWeight: 600 }} />\n                ))}\n              </Box>\n\n              <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                Salidas existentes:\n              </Typography>\n\n              <FormControl>\n                <Select\n                  multiple\n                  value={process.existingOutputs}\n                  onChange={handleChangeOutput}\n                  renderValue={(selected) => (\n                    <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 0.5 }}>\n                      {selected.map((value) => (\n                        <Chip key={value.id} label={value.name} />\n                      ))}\n                    </Box>\n                  )}\n                  MenuProps={MenuProps}\n                >\n                  {allOutputs.map((e) => (\n                    <MenuItem key={e.id} value={e} style={getStyles(e.id, process.existingOutputs)}>\n                      {e.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Box>\n          </Grid>\n\n          <Grid item xs={12} sm={4}>\n            <Box\n              sx={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                borderRadius: 2,\n                p: 2,\n                bgcolor: \"white\",\n              }}\n            >\n              <Box\n                sx={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Typography fontWeight={600}>Herramientas</Typography>\n                <IconButton disabled={!(newTool.name && newTool.description)} onClick={saveNewTool}>\n                  <Add />\n                </IconButton>\n              </Box>\n\n              <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                Nombre:\n              </Typography>\n              <TextField id=\"name\" name=\"name\" type=\"text\" required value={newTool.name} onChange={handleInputChangeTool} size=\"small\" margin=\"dense\" fullWidth />\n\n              <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                Descripcion:\n              </Typography>\n              <TextField id=\"description\" name=\"description\" type=\"text\" required value={newTool.description} onChange={handleInputChangeTool} size=\"small\" margin=\"dense\" />\n\n              <Typography variant=\"caption\" fontWeight={600} color={grey[400]} align=\"right\">\n                Herramientas agregadas manualmente\n              </Typography>\n\n              <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 0.5, p: 2 }}>\n                {newToolsArray.map((value, index) => (\n                  <Chip key={index} label={value.name} sx={{ fontWeight: 600 }} />\n                ))}\n              </Box>\n\n              <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                Herramientas existentes:\n              </Typography>\n              <FormControl>\n                <Select\n                  multiple\n                  value={process.existingTools}\n                  onChange={handleChangeTool}\n                  renderValue={(selected) => (\n                    <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 0.5 }}>\n                      {selected.map((value) => (\n                        <Chip key={value.id} label={value.name} />\n                      ))}\n                    </Box>\n                  )}\n                  MenuProps={MenuProps}\n                >\n                  {allTools.map((e) => (\n                    <MenuItem key={e.id} value={e} style={getStyles(e.id, process.existingTools)}>\n                      {e.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Box>\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"error\" variant=\"contained\" onClick={closeDialog}>\n          Cancelar\n        </Button>\n        <Button color=\"success\" variant=\"contained\" onClick={updateProcess} disabled={process.name === \"\" ? true : false}>\n          Actualizar\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default EditProcessDialog;\n","import { Add } from \"@mui/icons-material\";\nimport {\n  Box,\n  Button,\n  IconButton,\n  Menu,\n  MenuItem,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tooltip,\n  Typography,\n} from \"@mui/material\";\nimport { grey } from \"@mui/material/colors\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { client } from \"../../config/environment\";\nimport AddAreaDialog from \"./addAreaDialog\";\nimport AddGroupDialog from \"./addGroupDialog\";\nimport AddProcessDialog from \"./addProcessDialog\";\nimport EditAreaDialog from \"./editAreaDialog\";\nimport EditGroupDialog from \"./editGroupDialog\";\nimport EditProcessDialog from \"./editProcessDialog\";\n\nconst Dashboard = () => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n\n  const [anchorEls, setAnchorEls] = useState(null);\n  const opens = Boolean(anchorEls);\n\n  const [groups, setGroups] = useState([]);\n  const [areas, setAreas] = useState([]);\n  const [process, setProcess] = useState([]);\n  const [global, setGlobal] = useState([]);\n  const [actualCoor, setActualCoor] = useState();\n\n  const [editGroup, setEditGroup] = useState();\n  const [editArea, setEditArea] = useState();\n  const [editProcess, setEditProcess] = useState();\n\n  const [addGroupDialogShow, setAddGroupDialogShow] = useState(false);\n  const [addAreaDialogShow, setAddAreaDialogShow] = useState(false);\n  const [addProcessDialogShow, setAddProcessDialogShow] = useState(false);\n\n  const [editGroupDialogShow, setEditGroupDialogShow] = useState(false);\n  const [editAreaDialogShow, setEditAreaDialogShow] = useState(false);\n  const [editProcessDialogShow, setEditProcessDialogShow] = useState(false);\n\n  const refetch = () => {\n    loadGroups();\n    loadAreas();\n    loadProcesses();\n  };\n\n  const loadGroups = async () => {\n    try {\n      await client.get(\"groups\").then((res) => {\n        let gro = res?.data?.data;\n        setGroups(gro);\n      });\n    } catch (error) {\n      console.log(\"🚀 ~ file: index.jsx ~ line 45 ~ onFinish ~ error\", error);\n    }\n  };\n\n  const loadAreas = async () => {\n    try {\n      await client.get(\"areas\").then((res) => {\n        let are = res?.data?.data;\n        setAreas(are);\n      });\n    } catch (error) {\n      console.log(\"🚀 ~ file: index.jsx ~ line 45 ~ onFinish ~ error\", error);\n    }\n  };\n\n  const loadProcesses = async () => {\n    try {\n      await client.get(\"process\").then((res) => {\n        let pro = res?.data?.data;\n        setProcess(pro);\n      });\n    } catch (error) {\n      console.log(\"🚀 ~ file: index.jsx ~ line 45 ~ onFinish ~ error\", error);\n    }\n  };\n\n  const openEditGroupDialog = (g) => {\n    setEditGroup(g);\n    setEditGroupDialogShow(true);\n  };\n\n  const openEditAreaDialog = (a) => {\n    setEditArea(a);\n    setEditAreaDialogShow(true);\n  };\n\n  const openEditProcessDialog = (p) => {\n    setEditProcess(p);\n    setEditProcessDialogShow(true);\n  };\n\n  useEffect(() => {\n    loadGroups();\n    loadAreas();\n    loadProcesses();\n  }, []);\n\n  const createTable = () => {\n    let globalArray = [];\n\n    areas.forEach((a) => {\n      let aux = [];\n\n      groups.forEach((c) => {\n        let curr = process.filter(\n          (pro) => pro.areaId === a.id && pro.groupId === c.id\n        );\n\n        aux.push([...curr]);\n      });\n\n      globalArray.push(aux);\n    });\n\n    setGlobal(globalArray);\n  };\n\n  useEffect(() => {\n    createTable();\n  }, [process]);\n\n  return (\n    <>\n      <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", mb: 4 }}>\n        <Button\n          variant='contained'\n          onClick={(event) => {\n            setAnchorEl(event.currentTarget);\n          }}\n        >\n          Agregar\n        </Button>\n        <Menu\n          anchorEl={anchorEl}\n          open={open}\n          onClose={() => {\n            setAnchorEl(null);\n          }}\n          MenuListProps={{\n            \"aria-labelledby\": \"basic-button\",\n          }}\n        >\n          <MenuItem\n            key={1}\n            onClick={() => {\n              setAnchorEl(null);\n              setAddAreaDialogShow(true);\n            }}\n          >\n            Area\n          </MenuItem>\n          <MenuItem\n            key={2}\n            onClick={() => {\n              setAnchorEl(null);\n              setAddGroupDialogShow(true);\n            }}\n          >\n            Grupo\n          </MenuItem>\n          <MenuItem\n            key={3}\n            onClick={() => {\n              setAnchorEl(null);\n              setAddProcessDialogShow(true);\n            }}\n          >\n            Proceso\n          </MenuItem>\n        </Menu>\n      </Box>\n\n      <TableContainer>\n        <Table\n          sx={{\n            minWidth: 650,\n            \"& .MuiTableCell-root:hover\": {\n              bgcolor: \"secondary.main\",\n            },\n          }}\n        >\n          <TableHead>\n            <TableRow sx={{ \"& td\": { border: 0 } }}>\n              <TableCell\n                sx={{\n                  \"&:hover\": {\n                    bgcolor: \"transparent !important\",\n                  },\n                }}\n              ></TableCell>\n              {groups.map((g) => (\n                <Tooltip key={g.id} title='Editar' placement='top'>\n                  <TableCell\n                    onClick={() => {\n                      openEditGroupDialog(g);\n                    }}\n                    align='center'\n                    sx={{\n                      background: \"#D0D3D4\",\n                      borderRadius: 1,\n                    }}\n                  >\n                    <b>{g?.name}</b>\n                  </TableCell>\n                </Tooltip>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {areas.map((a, index) => (\n              <TableRow key={a.name} sx={{ \"& td\": { border: 0 } }}>\n                <Tooltip key={a.id} title='Editar' placement='top'>\n                  <TableCell\n                    sx={{\n                      position: \"sticky\",\n                      left: 0,\n                      background: \"#D0D3D4\",\n                      borderRadius: 1,\n                    }}\n                    onClick={() => {\n                      openEditAreaDialog(a);\n                    }}\n                    component='th'\n                    scope='row'\n                    align='center'\n                  >\n                    <b> {a.name}</b>\n                  </TableCell>\n                </Tooltip>\n\n                {global[index]?.map((ga, count) => (\n                  <TableCell\n                    key={count}\n                    align='center'\n                    sx={{\n                      background: \"#F8F9F9\",\n                      borderRadius: 1,\n                    }}\n                    onClick={() => {\n                      if (ga.length === 0) {\n                        setAddProcessDialogShow(true);\n                        setActualCoor({ area: a.id, group: groups[count].id });\n                      }\n                    }}\n                  >\n                    {ga.length !== 0 ? (\n                      ga?.map((proc) => (\n                        <div\n                          key={proc.id}\n                          onClick={() => {\n                            openEditProcessDialog(proc);\n                          }}\n                        >\n                          <Typography>{proc?.name}</Typography>\n                        </div>\n                      ))\n                    ) : (\n                      <Add sx={{ fill: \"#F8F9F9\" }} />\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <AddGroupDialog\n        visible={addGroupDialogShow}\n        setVisible={setAddGroupDialogShow}\n        refetch={refetch}\n      />\n\n      <AddAreaDialog\n        visible={addAreaDialogShow}\n        setVisible={setAddAreaDialogShow}\n        refetch={refetch}\n      />\n\n      <AddProcessDialog\n        visible={addProcessDialogShow}\n        setVisible={setAddProcessDialogShow}\n        refetch={refetch}\n        groups={groups}\n        areas={areas}\n        actual={actualCoor}\n        setActual={setActualCoor}\n      />\n\n      <EditGroupDialog\n        visible={editGroupDialogShow}\n        setVisible={setEditGroupDialogShow}\n        refetch={refetch}\n        groupToEdit={editGroup}\n        setGroupToEdit={setEditGroup}\n      />\n\n      <EditAreaDialog\n        visible={editAreaDialogShow}\n        setVisible={setEditAreaDialogShow}\n        refetch={refetch}\n        areaToEdit={editArea}\n        setAreaToEdit={setEditArea}\n      />\n\n      <EditProcessDialog\n        visible={editProcessDialogShow}\n        setVisible={setEditProcessDialogShow}\n        refetch={refetch}\n        actualProcess={editProcess}\n        setActualProcess={setEditProcess}\n      />\n    </>\n  );\n};\n\nexport default Dashboard;\n","import {\n  Alert,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  Snackbar,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { client } from \"../../../../config/environment\";\n\nconst InitialUser = {\n  email: \"\",\n  password: \"\",\n};\n\nconst CreateUser = ({ visible, setVisible, refetch }) => {\n  const [newUser, setNewUser] = useState(InitialUser);\n\n  const [alert, setAlert] = useState(false);\n\n  const handleClick = () => {\n    setAlert(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setAlert(false);\n  };\n\n  const resetStates = () => {\n    setNewUser(InitialUser);\n  };\n\n  const closeDialog = () => {\n    setVisible(false);\n    refetch();\n    resetStates();\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n\n    setNewUser({\n      ...newUser,\n      [name]: value,\n    });\n  };\n\n  const onFinish = async () => {\n    try {\n      await client.post(\"users\", newUser);\n      closeDialog();\n    } catch (error) {\n      console.log(\"🚀 ~ file: index.jsx ~ line 45 ~ onFinish ~ error\", error);\n      handleClick();\n    }\n  };\n\n  return (\n    <>\n      <Snackbar open={alert} autoHideDuration={3000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity='error' sx={{ width: \"100%\" }}>\n          Error al crear!\n        </Alert>\n      </Snackbar>\n      <Dialog open={visible} onClose={closeDialog}>\n        <DialogTitle>Crear usuario</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography variant='caption' display='block' gutterBottom>\n                Correo a utilizar:\n              </Typography>\n              <TextField\n                id='email'\n                name='email'\n                type='email'\n                required\n                value={newUser.email}\n                onChange={handleInputChange}\n                fullWidth\n                size='small'\n                margin='dense'\n              />\n            </Grid>\n            <Grid item xs>\n              <Typography variant='caption' display='block' gutterBottom>\n                Contraseña:\n              </Typography>\n              <TextField\n                id='password'\n                name='password'\n                type='password'\n                required\n                value={newUser.password}\n                onChange={handleInputChange}\n                fullWidth\n                size='small'\n                margin='dense'\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button color='error' variant='contained' onClick={closeDialog}>\n            Cancelar\n          </Button>\n          <Button color='success' variant='contained' onClick={onFinish}>\n            Crear\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default CreateUser;\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  Typography,\n} from \"@mui/material\";\nimport React from \"react\";\nimport { client } from \"../../../../config/environment\";\n\nconst DeleteUser = ({ visible, setVisible, user, refetch }) => {\n  const closeDialog = () => {\n    setVisible(false);\n    refetch();\n  };\n\n  const onDelete = async () => {\n    try {\n      await client.delete(`users/${user?.id}`);\n      closeDialog();\n    } catch (error) {\n      console.log(\"🚀 ~ file: index.jsx ~ line 22 ~ onDelete ~ error\", error);\n    }\n  };\n\n  return (\n    <Dialog open={visible}>\n      <DialogContent>\n        <DialogContentText gutterBottom variant='h6' fontWeight={600}>\n          ¿Seguro que deseas borrar {user?.email}?\n        </DialogContentText>\n        <Typography variant='body1'>\n          Al borrar este usuario no podrás volver a recuperarlo.\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={closeDialog}>Cancelar</Button>\n        <Button variant='contained' color='error' onClick={onDelete}>\n          Borrar\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default DeleteUser;\n","import { Add, DeleteForever, Edit } from \"@mui/icons-material\";\nimport { Box, Button, Paper } from \"@mui/material\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport React, { useEffect, useState } from \"react\";\nimport { client } from \"../../config/environment\";\nimport CreateUser from \"./components/createUser\";\nimport DeleteUser from \"./components/deleteUser\";\n\nconst Users = () => {\n  const [createUserDialog, setCreateUserDialog] = useState(false);\n  const [deleteUserDialog, setDeleteUserDialog] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState({});\n\n  const columns = [\n    {\n      field: \"email\",\n      headerName: \"Correo\",\n      flex: 0.75,\n    },\n    {\n      field: \"edit\",\n      headerName: \"Opciones\",\n      flex: 0.25,\n      renderCell: (params) => {\n        return (\n          <Box>\n            <Button startIcon={<Edit />} />\n            <Button\n              startIcon={<DeleteForever />}\n              onClick={() => {\n                openDeleteUserDialog(params.row);\n              }}\n            />\n          </Box>\n        );\n      },\n    },\n  ];\n  const openCreateUserDialog = () => {\n    setCreateUserDialog(true);\n  };\n\n  const openDeleteUserDialog = (user) => {\n    setDeleteUserDialog(true);\n    setSelectedUser(user);\n  };\n\n  const findUsers = async () => {\n    try {\n      await client.get(\"users\").then((res) => {\n        let list = res?.data?.data;\n        setUsers(list);\n      });\n    } catch (error) {\n      console.log(\"🚀 ~ file: index.jsx ~ line 55 ~ findUsers ~ error\", error);\n    }\n  };\n\n  useEffect(() => {\n    findUsers();\n  }, []);\n\n  return (\n    <>\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n        }}\n      >\n        <Button\n          variant='contained'\n          endIcon={<Add />}\n          onClick={openCreateUserDialog}\n        >\n          Nuevo\n        </Button>\n      </Box>\n      <Paper sx={{ mt: 2 }}>\n        <DataGrid autoHeight columns={columns} rows={users} hideFooter />\n      </Paper>\n\n      <CreateUser\n        visible={createUserDialog}\n        setVisible={setCreateUserDialog}\n        refetch={findUsers}\n      />\n      <DeleteUser\n        visible={deleteUserDialog}\n        setVisible={setDeleteUserDialog}\n        user={selectedUser}\n        refetch={findUsers}\n      />\n    </>\n  );\n};\n\nexport default Users;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Process = () => {\n  return <Link to={\"/dashboard\"}>Regresaras</Link>;\n};\n\nexport default Process;\n","import { Backdrop, CircularProgress, CssBaseline } from \"@mui/material\";\nimport React from \"react\";\nimport { Navigate, Route, Routes } from \"react-router-dom\";\nimport MainLayout from \"./layouts/main\";\nimport { useSession } from \"./providers/session\";\nimport Auth from \"./views/auth\";\nimport Dashboard from \"./views/dashboard\";\nimport Users from \"./views/users\";\nimport Process from \"./views/process\";\n\nconst App = () => {\n  const { isLogged, loading } = useSession();\n\n  if (loading) {\n    return (\n      <Backdrop open={loading} sx={{ zIndex: 1500 }}>\n        <CircularProgress />\n      </Backdrop>\n    );\n  }\n  /* \n  if (!isLogged) {\n    return <Auth />;\n  } */\n\n  return (\n    <MainLayout>\n      <CssBaseline />\n      <Routes>\n        <Route path='/dashboard' element={<Dashboard />} />\n        <Route path='/process' element={<Process />} />\n        <Route path='/users' element={<Users />} />\n        <Route path='*' element={<Navigate to='/dashboard' />} />\n      </Routes>\n    </MainLayout>\n  );\n};\n\nexport default App;\n","import { createTheme } from \"@mui/material/styles\";\n\nlet theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#566573\",\n    },\n    secondary: {\n      main: \"#D6DBDF\",\n    },\n    background: {\n      default: \"#F5F5F5\",\n    },\n  },\n  responsiveFontSizes: true,\n});\n\n// theme = responsiveFontSizes(theme);\n\nexport default theme;\n","import { ThemeProvider } from \"@mui/material\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport theme from \"./config/theme\";\nimport SessionProvider from \"./providers/session/provider\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\n\nroot.render(\n  <ThemeProvider theme={theme}>\n    <Router basename='/'>\n      <SessionProvider>\n        <App />\n      </SessionProvider>\n    </Router>\n  </ThemeProvider>\n);\n"],"sourceRoot":""}