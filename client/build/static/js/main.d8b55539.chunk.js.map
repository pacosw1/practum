{"version":3,"sources":["config/environment/index.js","providers/session/provider.jsx","providers/session/index.js","layouts/main/index.jsx","views/auth/login/index.jsx","views/auth/index.jsx","views/dashboard/addAreaDialog/index.jsx","views/dashboard/addGroupDialog/index.jsx","views/dashboard/addProcessDialog/index.jsx","views/dashboard/editAreaDialog/index.jsx","views/dashboard/editGroupDialog/index.jsx","views/dashboard/editProcessDialog/index.jsx","views/dashboard/index.jsx","views/users/components/createUser/index.jsx","views/users/components/deleteUser/index.jsx","views/users/index.jsx","views/process/index.jsx","App.jsx","config/theme.jsx","index.jsx"],"names":["client","axios","create","baseURL","withCredentials","sessionContext","createContext","SessionProvider","children","useState","isLogged","setIsLogged","user","setUser","loading","setLoading","logoutWindow","logout","post","localStorage","clear","setItem","Date","now","useEffect","fetchSession","get","then","res","data","authentication","authenticated","catch","err","Provider","value","useSession","useContext","Bar","styled","AppBar","shouldForwardProp","prop","theme","open","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","marginLeft","width","enteringScreen","LeftDrawer","Drawer","position","whiteSpace","boxSizing","overflowX","spacing","breakpoints","up","MainLayout","setOpen","toggleDrawer","navigate","useNavigate","pathname","useLocation","Box","sx","display","CssBaseline","Toolbar","pr","IconButton","edge","color","onClick","marginRight","Menu","Typography","component","variant","noWrap","flexGrow","Logout","alignItems","justifyContent","px","ChevronLeft","Divider","List","ListItemButton","selected","ListItemIcon","ListItemText","primary","Person","my","height","overflow","Container","maxWidth","mt","mb","Login","handleSubmit","event","preventDefault","FormData","currentTarget","email","password","console","log","Paper","elevation","p","borderRadius","backgroundColor","marginTop","boxShadow","padding","align","gutterBottom","onSubmit","flexDirection","TextField","margin","required","fullWidth","name","id","label","autoComplete","type","Button","mx","Auth","path","element","to","InitialName","AddAreaDialog","visible","setVisible","refetch","area","setArea","closeDialog","createArea","Dialog","onClose","DialogTitle","DialogContent","Grid","container","item","xs","onChange","e","target","size","DialogActions","disabled","AddGroupDialog","group","setGroup","createGroup","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","getStyles","l","existent","fontWeight","indexOf","InitialProcess","areaId","groupId","newEntries","existingEntries","newOutputs","existingOutputs","newTools","existingTools","description","AddProcessDialog","groups","areas","actual","setActual","process","setProcess","allEntries","setAllEntries","allOutputs","setAllOutputs","allTools","setAllTools","newEntry","setNewEntry","newOutput","setNewOutput","newTool","setNewTool","newEntriesArray","setNewEntriesArray","newOutputsArray","setNewOutputsArray","newToolsArray","setNewToolsArray","handleInputChangeEntry","handleInputChangeOutput","handleInputChangeTool","resetStates","createProcess","auxProcess","map","ent","loadEntries","loadOutputs","loadTools","undefined","String","sm","bgcolor","FormControl","Select","g","MenuItem","a","Add","grey","flexWrap","gap","index","Chip","multiple","aux","renderValue","EditAreaDialog","areaToEdit","setAreaToEdit","editArea","put","EditGroupDialog","groupToEdit","setGroupToEdit","editGroup","find","EditProcessDialog","actualProcess","setActualProcess","updateProcess","loadProcess","entries","entry","outputs","output","tools","tool","results","newProcess","Dashboard","anchorEl","setAnchorEl","Boolean","anchorEls","setGroups","setAreas","global","setGlobal","actualCoor","setActualCoor","setEditGroup","setEditArea","editProcess","setEditProcess","addGroupDialogShow","setAddGroupDialogShow","addAreaDialogShow","setAddAreaDialogShow","addProcessDialogShow","setAddProcessDialogShow","editGroupDialogShow","setEditGroupDialogShow","editAreaDialogShow","setEditAreaDialogShow","editProcessDialogShow","setEditProcessDialogShow","loadGroups","loadAreas","loadProcesses","gro","are","pro","globalArray","forEach","c","curr","filter","push","createTable","MenuListProps","TableContainer","Table","minWidth","TableHead","TableRow","border","TableCell","Tooltip","title","placement","openEditGroupDialog","background","TableBody","left","openEditAreaDialog","scope","ga","count","length","proc","fill","InitialUser","CreateUser","newUser","setNewUser","alert","setAlert","handleClose","reason","handleInputChange","onFinish","Snackbar","autoHideDuration","Alert","severity","DeleteUser","onDelete","delete","DialogContentText","Users","createUserDialog","setCreateUserDialog","deleteUserDialog","setDeleteUserDialog","users","setUsers","selectedUser","setSelectedUser","columns","field","headerName","flex","renderCell","params","startIcon","Edit","DeleteForever","openDeleteUserDialog","row","findUsers","list","endIcon","DataGrid","autoHeight","rows","hideFooter","Process","App","Backdrop","CircularProgress","createTheme","palette","main","secondary","default","responsiveFontSizes","ReactDOM","createRoot","document","getElementById","render","ThemeProvider","basename"],"mappings":"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","file":"static/js/main.d8b55539.chunk.js","sourcesContent":["import axios from \"axios\";\n\nlet inMemoryToken;\n\n// const apiUrl = process.env.REACT_APP_API_URL;\n\nconst accessToken = {\n  set: (newToken) => {\n    inMemoryToken = newToken;\n  },\n  get: () => inMemoryToken,\n};\n\nconst client = axios.create({\n  baseURL: \"/api\",\n  withCredentials: true,\n});\n\nexport { client, accessToken };\n","import React, { createContext, useEffect, useState } from \"react\";\nimport { client } from \"./../../config/environment\";\n\nconst sessionContext = createContext({});\n\nconst SessionProvider = ({ children }) => {\n  const [isLogged, setIsLogged] = useState();\n  const [user, setUser] = useState();\n  const [loading, setLoading] = useState(false);\n\n  const logoutWindow = async () => {\n    setIsLogged(false);\n  };\n\n  const logout = async () => {\n    logoutWindow();\n    await client.post(\"auth/logout\");\n    localStorage.clear();\n    localStorage.setItem(\"logout\", Date.now()); // Force logout on every tab\n  };\n\n  useEffect(() => {\n    const fetchSession = async () => {\n      await client.get(\"auth\").then((res) => {\n        const data = res?.data?.data?.data;\n        const authentication = res?.data?.data?.authenticated;\n        setIsLogged(authentication);\n        setUser(data);\n        setLoading(false);\n      });\n    };\n\n    setLoading(true);\n    fetchSession().catch((err) => {\n      setLoading(false);\n    });\n  }, []);\n\n  return (\n    <sessionContext.Provider\n      value={{\n        isLogged,\n        setIsLogged,\n        user,\n        logout,\n        loading,\n      }}\n    >\n      {children}\n    </sessionContext.Provider>\n  );\n};\n\nexport { sessionContext };\nexport default SessionProvider;\n","import { useContext } from \"react\";\nimport SessionProvider, { sessionContext } from \"./provider\";\n\nconst useSession = () => useContext(sessionContext);\n\nexport { useSession, SessionProvider };\n","import {\n  ChevronLeft,\n  Dashboard,\n  Logout,\n  Menu,\n  Person,\n} from \"@mui/icons-material\";\nimport {\n  AppBar,\n  Box,\n  Container,\n  Divider,\n  Drawer,\n  IconButton,\n  List,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  styled,\n  Toolbar,\n  Typography,\n} from \"@mui/material\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport React, { useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useSession } from \"../../providers/session\";\n\nconst drawerWidth = 240;\n\nconst Bar = styled(AppBar, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create([\"width\", \"margin\"], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst LeftDrawer = styled(Drawer, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  \"& .MuiDrawer-paper\": {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    boxSizing: \"border-box\",\n    ...(!open && {\n      overflowX: \"hidden\",\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      width: theme.spacing(7),\n      [theme.breakpoints.up(\"sm\")]: {\n        width: theme.spacing(9),\n      },\n    }),\n  },\n}));\n\nconst MainLayout = ({ children }) => {\n  const { logout } = useSession();\n  const [open, setOpen] = useState(false);\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n\n  let navigate = useNavigate();\n  const { pathname } = useLocation();\n\n  return (\n    <Box sx={{ display: \"flex\" }}>\n      <CssBaseline />\n      <Bar position='absolute' open={open}>\n        <Toolbar\n          sx={{\n            pr: \"24px\", // keep right padding when drawer closed\n          }}\n        >\n          <IconButton\n            edge='start'\n            color='inherit'\n            aria-label='open drawer'\n            onClick={toggleDrawer}\n            sx={{\n              marginRight: \"36px\",\n              ...(open && { display: \"none\" }),\n            }}\n          >\n            <Menu />\n          </IconButton>\n          <Typography\n            component='h1'\n            variant='h6'\n            color='inherit'\n            noWrap\n            sx={{ flexGrow: 1 }}\n          >\n            Practum Process Manager\n          </Typography>\n          <IconButton onClick={logout}>\n            <Logout color='secondary' />\n          </IconButton>\n        </Toolbar>\n      </Bar>\n      <LeftDrawer variant='permanent' open={open}>\n        <Toolbar\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"flex-end\",\n            px: [1],\n          }}\n        >\n          <IconButton onClick={toggleDrawer}>\n            <ChevronLeft />\n          </IconButton>\n        </Toolbar>\n        <Divider />\n        <List component='nav'>\n          <ListItemButton\n            selected={\"/dashboard\" === pathname}\n            onClick={() => {\n              navigate(\"/dashboard\");\n            }}\n          >\n            <ListItemIcon>\n              <Dashboard />\n            </ListItemIcon>\n            <ListItemText primary='Dashboard' />\n          </ListItemButton>\n          <ListItemButton\n            selected={\"/users\" === pathname}\n            onClick={() => {\n              navigate(\"/users\");\n            }}\n          >\n            <ListItemIcon>\n              <Person />\n            </ListItemIcon>\n            <ListItemText primary='Usuarios' />\n          </ListItemButton>\n          <Divider sx={{ my: 1 }} />\n        </List>\n      </LeftDrawer>\n      <Box\n        component='main'\n        sx={{\n          flexGrow: 1,\n          height: \"100vh\",\n          overflow: \"auto\",\n        }}\n      >\n        <Toolbar />\n\n        <Container maxWidth='lg' sx={{ mt: 4, mb: 4 }}>\n          {children}\n        </Container>\n      </Box>\n    </Box>\n  );\n};\n\nexport default MainLayout;\n","import {\n  Box,\n  Button,\n  Container,\n  Paper,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport React from \"react\";\nimport { client } from \"../../../config/environment\";\nimport { useSession } from \"../../../providers/session\";\n\nconst Login = () => {\n  const { setIsLogged } = useSession();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n\n    try {\n      await client.post(\"auth/login\", {\n        email: data.get(\"email\"),\n        password: data.get(\"password\"),\n      });\n      setIsLogged(true);\n    } catch (error) {\n      console.log(\n        \"🚀 ~ file: index.jsx ~ line 29 ~ handleSubmit ~ error\",\n        error\n      );\n    }\n  };\n\n  return (\n    <Box>\n      <Container component='main' maxWidth='xs'>\n        <Box mt={\"25%\"}>\n          <Paper elevation={24} sx={{ p: 2, borderRadius: \"0.5rem\" }}>\n            <Box\n              sx={{\n                backgroundColor: \"#566573\",\n                borderRadius: \"0.5rem\",\n                marginTop: -5,\n                color: \"white\",\n                boxShadow: 12,\n                padding: 4,\n              }}\n            >\n              <Typography align='center' variant='h4' gutterBottom>\n                <b>Iniciar Sesión</b>\n              </Typography>\n              <Typography align='center' gutterBottom>\n                Introduce tus credenciales\n              </Typography>\n            </Box>\n            <Box\n              component='form'\n              onSubmit={handleSubmit}\n              mt={1}\n              sx={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n              }}\n            >\n              <TextField\n                margin='normal'\n                variant='filled'\n                required\n                fullWidth\n                name='email'\n                id='email'\n                label='Correo electrónico'\n                autoComplete='email'\n              />\n              <TextField\n                margin='normal'\n                variant='filled'\n                required\n                fullWidth\n                name='password'\n                label='Password'\n                type='password'\n                id='password'\n              />\n              <Button\n                type='submit'\n                variant='contained'\n                sx={{ mt: 3, mb: 4, mx: \"auto\" }}\n              >\n                Iniciar Sesión\n              </Button>\n            </Box>\n          </Paper>\n        </Box>\n      </Container>\n    </Box>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { Navigate, Route, Routes } from \"react-router-dom\";\nimport Login from \"./login\";\n\nconst Auth = () => {\n  return (\n    <Routes>\n      <Route path='/login' element={<Login />} />\n      <Route path='*' element={<Navigate to='/login' />} />\n    </Routes>\n  );\n};\n\nexport default Auth;\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { client } from \"../../../config/environment\";\n\nconst InitialName = {\n  name: \"\",\n};\n\nconst AddAreaDialog = ({ visible, setVisible, refetch }) => {\n  const [area, setArea] = useState(InitialName);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n\n    setArea({\n      ...area,\n      [name]: value,\n    });\n  };\n\n  const closeDialog = () => {\n    setVisible(false);\n    refetch();\n    setArea(InitialName);\n  };\n\n  const createArea = async () => {\n    try {\n      await client.post(\"areas\", area);\n      refetch();\n      closeDialog();\n    } catch (error) {\n      console.log(\"🚀 ~ file: index.jsx ~ line 45 ~ onFinish ~ error\", error);\n    }\n  };\n\n  return (\n    <Dialog open={visible} onClose={closeDialog}>\n      <DialogTitle>Crear Area</DialogTitle>\n      <DialogContent>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Typography variant='caption' display='block' gutterBottom>\n              Nombre de Area:\n            </Typography>\n            <TextField\n              id='name'\n              name='name'\n              type='text'\n              required\n              value={area.name}\n              onChange={handleInputChange}\n              fullWidth\n              size='small'\n              margin='dense'\n            />\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button color='error' variant='contained' onClick={closeDialog}>\n          Cancelar\n        </Button>\n        <Button\n          color='success'\n          variant='contained'\n          onClick={createArea}\n          disabled={area.name === \"\" ? true : false}\n        >\n          Crear\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default AddAreaDialog;\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { client } from \"../../../config/environment\";\n\nconst InitialName = {\n  name: \"\",\n};\n\nconst AddGroupDialog = ({ visible, setVisible, refetch }) => {\n  const [group, setGroup] = useState(InitialName);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n\n    setGroup({\n      ...group,\n      [name]: value,\n    });\n  };\n\n  const closeDialog = () => {\n    setVisible(false);\n    refetch();\n    setGroup(InitialName);\n  };\n\n  const createGroup = async () => {\n    try {\n      await client.post(\"groups\", group);\n      refetch();\n      closeDialog();\n    } catch (error) {\n      console.log(\"🚀 ~ file: index.jsx ~ line 45 ~ onFinish ~ error\", error);\n    }\n  };\n\n  return (\n    <Dialog open={visible} onClose={closeDialog}>\n      <DialogTitle>Crear grupo</DialogTitle>\n      <DialogContent>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Typography variant='caption' display='block' gutterBottom>\n              Nombre de Grupo:\n            </Typography>\n            <TextField\n              id='name'\n              name='name'\n              type='text'\n              required\n              value={group.name}\n              onChange={handleInputChange}\n              fullWidth\n              size='small'\n              margin='dense'\n            />\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button color='error' variant='contained' onClick={closeDialog}>\n          Cancelar\n        </Button>\n        <Button\n          color='success'\n          variant='contained'\n          onClick={createGroup}\n          disabled={group.name === \"\" ? true : false}\n        >\n          Crear\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default AddGroupDialog;\n","import { Add } from '@mui/icons-material';\nimport {\n  Box,\n  Button,\n  Chip,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControl,\n  FormHelperText,\n  Grid,\n  IconButton,\n  InputLabel,\n  MenuItem,\n  OutlinedInput,\n  Select,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport { grey } from '@mui/material/colors';\nimport React, { useEffect, useState } from 'react';\nimport { client } from '../../../config/environment';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nfunction getStyles(l, existent) {\n  return {\n    fontWeight: existent.indexOf(l) === -1 ? 500 : 600,\n  };\n}\n\nconst InitialProcess = {\n  name: '',\n  areaId: '',\n  groupId: '',\n  newEntries: [],\n  existingEntries: [],\n  newOutputs: [],\n  existingOutputs: [],\n  newTools: [],\n  existingTools: [],\n};\n\nconst InitialName = {\n  name: '',\n  description: '',\n};\n\nconst AddProcessDialog = ({ visible, setVisible, refetch, groups, areas, actual, setActual }) => {\n  const [process, setProcess] = useState(InitialProcess);\n\n  const [allEntries, setAllEntries] = useState([]);\n  const [allOutputs, setAllOutputs] = useState([]);\n  const [allTools, setAllTools] = useState([]);\n\n  const [newEntry, setNewEntry] = useState(InitialName);\n  const [newOutput, setNewOutput] = useState(InitialName);\n  const [newTool, setNewTool] = useState(InitialName);\n\n  const [newEntriesArray, setNewEntriesArray] = useState([]);\n  const [newOutputsArray, setNewOutputsArray] = useState([]);\n  const [newToolsArray, setNewToolsArray] = useState([]);\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n\n    setProcess({\n      ...process,\n      [name]: value,\n    });\n  };\n\n  const handleChangeEntry = event => {\n    const aux = event.target.value;\n    setProcess({ ...process, existingEntries: aux });\n  };\n\n  const handleChangeOutput = event => {\n    const aux = event.target.value;\n    setProcess({ ...process, existingOutputs: aux });\n  };\n\n  const handleChangeTool = event => {\n    const aux = event.target.value;\n    setProcess({ ...process, existingTools: aux });\n  };\n\n  const handleInputChangeEntry = e => {\n    const { name, value } = e.target;\n\n    setNewEntry({\n      ...newEntry,\n      [name]: value,\n    });\n  };\n\n  const handleInputChangeOutput = e => {\n    const { name, value } = e.target;\n\n    setNewOutput({\n      ...newOutput,\n      [name]: value,\n    });\n  };\n\n  const handleInputChangeTool = e => {\n    const { name, value } = e.target;\n\n    setNewTool({\n      ...newTool,\n      [name]: value,\n    });\n  };\n\n  const saveNewEntry = () => {\n    setNewEntriesArray([...newEntriesArray, newEntry]);\n    setNewEntry(InitialName);\n  };\n\n  const saveNewOutput = () => {\n    setNewOutputsArray([...newOutputsArray, newOutput]);\n    setNewOutput(InitialName);\n  };\n\n  const saveNewTool = () => {\n    setNewToolsArray([...newToolsArray, newTool]);\n    setNewTool(InitialName);\n  };\n\n  const closeDialog = () => {\n    setVisible(false);\n    refetch();\n    resetStates();\n  };\n\n  const resetStates = () => {\n    setActual();\n    setProcess(InitialProcess);\n    setAllEntries([]);\n    setAllOutputs([]);\n    setAllTools([]);\n    setNewEntry(InitialName);\n    setNewOutput(InitialName);\n    setNewTool(InitialName);\n    setNewEntriesArray([]);\n    setNewOutputsArray([]);\n    setNewToolsArray([]);\n  };\n\n  const createProcess = async () => {\n    let auxProcess = process;\n    auxProcess.existingEntries = process.existingEntries.map(ent => {\n      return ent.id;\n    });\n\n    auxProcess.existingOutputs = process.existingOutputs.map(ent => {\n      return ent.id;\n    });\n\n    auxProcess.existingTools = process.existingTools.map(ent => {\n      return ent.id;\n    });\n\n    auxProcess.newEntries = newEntriesArray;\n    auxProcess.newOutputs = newOutputsArray;\n    auxProcess.newTools = newToolsArray;\n\n    try {\n      await client.post('process', auxProcess);\n      refetch();\n      closeDialog();\n    } catch (error) {\n      console.log('🚀 ~ file: index.jsx ~ line 45 ~ onFinish ~ error', error);\n    }\n  };\n\n  const loadEntries = async () => {\n    try {\n      await client.get('entries').then(res => {\n        let e = res?.data?.data;\n        setAllEntries(e);\n      });\n    } catch (error) {\n      console.log('🚀 ~ file: index.jsx ~ line 45 ~ onFinish ~ error', error);\n    }\n  };\n\n  const loadOutputs = async () => {\n    try {\n      await client.get('outputs').then(res => {\n        let e = res?.data?.data;\n        setAllOutputs(e);\n      });\n    } catch (error) {\n      console.log('🚀 ~ file: index.jsx ~ line 45 ~ onFinish ~ error', error);\n    }\n  };\n\n  const loadTools = async () => {\n    try {\n      await client.get('tools').then(res => {\n        let e = res?.data?.data;\n        setAllTools(e);\n      });\n    } catch (error) {\n      console.log('🚀 ~ file: index.jsx ~ line 45 ~ onFinish ~ error', error);\n    }\n  };\n\n  useEffect(() => {\n    if (actual !== undefined) {\n      loadEntries();\n      loadOutputs();\n      loadTools();\n\n      setProcess({\n        ...process,\n        areaId: String(actual?.area),\n        groupId: String(actual?.group),\n      });\n    }\n  }, [visible, actual]);\n\n  return (\n    <Dialog\n      open={visible}\n      onClose={closeDialog}\n      maxWidth=\"xl\"\n      PaperProps={{\n        style: {\n          backgroundColor: '#F5F5F5',\n        },\n      }}\n    >\n      <DialogTitle>Crear Proceso</DialogTitle>\n      <DialogContent>\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={6}>\n            <Box\n              sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                borderRadius: 1,\n                p: 2,\n                bgcolor: 'white',\n              }}\n            >\n              <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                Nombre de Proceso:\n              </Typography>\n              <TextField\n                id=\"name\"\n                name=\"name\"\n                type=\"text\"\n                required\n                value={process.name}\n                onChange={handleInputChange}\n                size=\"small\"\n                margin=\"dense\"\n                fullWidth\n              />\n            </Box>\n          </Grid>\n\n          <Grid item xs={6} sm={3}>\n            <Box\n              sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                borderRadius: 2,\n                p: 2,\n                bgcolor: 'white',\n              }}\n            >\n              <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                Grupo:\n              </Typography>\n              <FormControl>\n                <Select\n                  value={process.groupId}\n                  onChange={event => {\n                    setProcess({ ...process, groupId: event.target.value });\n                  }}\n                >\n                  {groups.map(g => (\n                    <MenuItem key={g.id} value={String(g?.id)}>\n                      {g?.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Box>\n          </Grid>\n\n          <Grid item xs={6} sm={3}>\n            <Box\n              sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                borderRadius: 2,\n                p: 2,\n                bgcolor: 'white',\n              }}\n            >\n              <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                Area:\n              </Typography>\n              <FormControl>\n                <Select\n                  value={process.areaId}\n                  onChange={event => {\n                    setProcess({ ...process, areaId: event.target.value });\n                  }}\n                >\n                  {areas.map(a => (\n                    <MenuItem key={a.id} value={String(a?.id)}>\n                      {a?.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Box>\n          </Grid>\n\n          <Grid item xs={12} sm={4}>\n            <Box\n              sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                borderRadius: 2,\n                p: 2,\n                bgcolor: 'white',\n              }}\n            >\n              <Box\n                sx={{\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                }}\n              >\n                <Typography fontWeight={600}>Entradas</Typography>\n                <IconButton disabled={!(newEntry.name && newEntry.description)} onClick={saveNewEntry}>\n                  <Add />\n                </IconButton>\n              </Box>\n\n              <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                Nombre:\n              </Typography>\n              <TextField\n                id=\"name\"\n                name=\"name\"\n                type=\"text\"\n                required\n                value={newEntry.name}\n                onChange={handleInputChangeEntry}\n                size=\"small\"\n                margin=\"dense\"\n                fullWidth\n              />\n\n              <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                Descripcion:\n              </Typography>\n              <TextField\n                id=\"description\"\n                name=\"description\"\n                type=\"text\"\n                required\n                value={newEntry.description}\n                onChange={handleInputChangeEntry}\n                size=\"small\"\n                margin=\"dense\"\n                fullWidth\n              />\n\n              <Typography variant=\"caption\" fontWeight={600} color={grey[400]} align=\"right\">\n                Entradas agregadas manualmente\n              </Typography>\n\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5, p: 2 }}>\n                {newEntriesArray.map((value, index) => (\n                  <Chip key={index} label={value.name} sx={{ fontWeight: 600 }} />\n                ))}\n              </Box>\n\n              <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                Entradas existentes:\n              </Typography>\n              <FormControl>\n                <Select\n                  multiple\n                  value={process.existingEntries}\n                  onChange={handleChangeEntry}\n                  renderValue={selected => (\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                      {selected.map(value => (\n                        <Chip key={value.id} label={value.name} />\n                      ))}\n                    </Box>\n                  )}\n                  MenuProps={MenuProps}\n                >\n                  {allEntries.map(e => (\n                    <MenuItem key={e.id} value={e} style={getStyles(e, process.existingEntries)}>\n                      {e.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Box>\n          </Grid>\n\n          <Grid item xs={12} sm={4}>\n            <Box\n              sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                borderRadius: 2,\n                p: 2,\n                bgcolor: 'white',\n              }}\n            >\n              <Box\n                sx={{\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                }}\n              >\n                <Typography fontWeight={600}>Salidas</Typography>\n                <IconButton disabled={!(newOutput.name && newOutput.description)} onClick={saveNewOutput}>\n                  <Add />\n                </IconButton>\n              </Box>\n\n              <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                Nombre:\n              </Typography>\n              <TextField\n                id=\"name\"\n                name=\"name\"\n                type=\"text\"\n                required\n                value={newOutput.name}\n                onChange={handleInputChangeOutput}\n                size=\"small\"\n                margin=\"dense\"\n                fullWidth\n              />\n\n              <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                Descripcion:\n              </Typography>\n              <TextField\n                id=\"description\"\n                name=\"description\"\n                type=\"text\"\n                required\n                value={newOutput.description}\n                onChange={handleInputChangeOutput}\n                size=\"small\"\n                margin=\"dense\"\n                fullWidth\n              />\n\n              <Typography variant=\"caption\" fontWeight={600} color={grey[400]} align=\"right\">\n                Salidas agregadas manualmente\n              </Typography>\n\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5, p: 2 }}>\n                {newOutputsArray.map((value, index) => (\n                  <Chip key={index} label={value.name} sx={{ fontWeight: 600 }} />\n                ))}\n              </Box>\n\n              <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                Salidas existentes:\n              </Typography>\n\n              <FormControl>\n                <Select\n                  multiple\n                  value={process.existingOutputs}\n                  onChange={handleChangeOutput}\n                  renderValue={selected => (\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                      {selected.map(value => (\n                        <Chip key={value.id} label={value.name} />\n                      ))}\n                    </Box>\n                  )}\n                  MenuProps={MenuProps}\n                >\n                  {allOutputs.map(e => (\n                    <MenuItem key={e.id} value={e} style={getStyles(e, process.existingOutputs)}>\n                      {e.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Box>\n          </Grid>\n\n          <Grid item xs={12} sm={4}>\n            <Box\n              sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                borderRadius: 2,\n                p: 2,\n                bgcolor: 'white',\n              }}\n            >\n              <Box\n                sx={{\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                }}\n              >\n                <Typography fontWeight={600}>Herramientas</Typography>\n                <IconButton disabled={!(newTool.name && newTool.description)} onClick={saveNewTool}>\n                  <Add />\n                </IconButton>\n              </Box>\n\n              <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                Nombre:\n              </Typography>\n              <TextField\n                id=\"name\"\n                name=\"name\"\n                type=\"text\"\n                required\n                value={newTool.name}\n                onChange={handleInputChangeTool}\n                size=\"small\"\n                margin=\"dense\"\n                fullWidth\n              />\n\n              <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                Descripcion:\n              </Typography>\n              <TextField\n                id=\"description\"\n                name=\"description\"\n                type=\"text\"\n                required\n                value={newTool.description}\n                onChange={handleInputChangeTool}\n                size=\"small\"\n                margin=\"dense\"\n              />\n\n              <Typography variant=\"caption\" fontWeight={600} color={grey[400]} align=\"right\">\n                Herramientas agregadas manualmente\n              </Typography>\n\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5, p: 2 }}>\n                {newToolsArray.map((value, index) => (\n                  <Chip key={index} label={value.name} sx={{ fontWeight: 600 }} />\n                ))}\n              </Box>\n\n              <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                Herramientas existentes:\n              </Typography>\n              <FormControl>\n                <Select\n                  multiple\n                  value={process.existingTools}\n                  onChange={handleChangeTool}\n                  renderValue={selected => (\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                      {selected.map(value => (\n                        <Chip key={value.id} label={value.name} />\n                      ))}\n                    </Box>\n                  )}\n                  MenuProps={MenuProps}\n                >\n                  {allTools.map(e => (\n                    <MenuItem key={e.id} value={e} style={getStyles(e, process.existingTools)}>\n                      {e.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Box>\n          </Grid>\n\n          {/*  <Grid item xs={6}>\n            <FormControl sx={{ m: 1, width: 300 }}>\n              <InputLabel id='demo-multiple-chip-label'>Chip</InputLabel>\n              <Select\n                labelId='demo-multiple-chip-label'\n                id='demo-multiple-chip'\n                multiple\n                value={personName}\n                onChange={handleChange}\n                input={<OutlinedInput id='select-multiple-chip' label='Chip' />}\n                renderValue={(selected) => (\n                  <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 0.5 }}>\n                    {selected.map((value) => (\n                      <Chip key={value} label={value} />\n                    ))}\n                  </Box>\n                )}\n                MenuProps={MenuProps}\n              >\n                {names.map((name) => (\n                  <MenuItem\n                    key={name}\n                    value={name}\n                    style={getStyles(name, personName)}\n                  >\n                    {name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid> */}\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"error\" variant=\"contained\" onClick={closeDialog}>\n          Cancelar\n        </Button>\n        <Button\n          color=\"success\"\n          variant=\"contained\"\n          onClick={createProcess}\n          disabled={process.name === '' || process.groupId === '' || process.areaId === '' ? true : false}\n        >\n          Crear\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default AddProcessDialog;\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { client } from \"../../../config/environment\";\n\nconst InitialName = {\n  name: \"\",\n};\n\nconst EditAreaDialog = ({\n  visible,\n  setVisible,\n  refetch,\n  areaToEdit,\n  setAreaToEdit,\n}) => {\n  const [area, setArea] = useState(InitialName);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n\n    setArea({\n      ...area,\n      [name]: value,\n    });\n  };\n\n  const closeDialog = () => {\n    setVisible(false);\n    refetch();\n    setArea(InitialName);\n    setAreaToEdit();\n  };\n\n  const editArea = async () => {\n    try {\n      await client.put(`areas/${areaToEdit.id}`, area);\n      refetch();\n      closeDialog();\n    } catch (error) {\n      console.log(\"🚀 ~ file: index.jsx ~ line 45 ~ onFinish ~ error\", error);\n    }\n  };\n\n  useEffect(() => {\n    if (visible === true) {\n      setArea({ ...area, name: areaToEdit.name });\n    }\n  }, [visible, areaToEdit]);\n\n  return (\n    <Dialog open={visible} onClose={closeDialog}>\n      <DialogTitle>Editar area</DialogTitle>\n      <DialogContent>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Typography variant='caption' display='block' gutterBottom>\n              Nombre de Area:\n            </Typography>\n            <TextField\n              id='name'\n              name='name'\n              type='text'\n              required\n              value={area.name}\n              onChange={handleInputChange}\n              fullWidth\n              size='small'\n              margin='dense'\n            />\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button color='error' variant='contained' onClick={closeDialog}>\n          Cancelar\n        </Button>\n        <Button\n          color='success'\n          variant='contained'\n          onClick={editArea}\n          disabled={area.name === \"\" ? true : false}\n        >\n          Actualizar\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default EditAreaDialog;\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { client } from \"../../../config/environment\";\n\nconst InitialName = {\n  name: \"\",\n};\n\nconst EditGroupDialog = ({\n  visible,\n  setVisible,\n  refetch,\n  groupToEdit,\n  setGroupToEdit,\n}) => {\n  const [group, setGroup] = useState(InitialName);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n\n    setGroup({\n      ...group,\n      [name]: value,\n    });\n  };\n\n  const closeDialog = () => {\n    setVisible(false);\n    refetch();\n    setGroup(InitialName);\n    setGroupToEdit();\n  };\n\n  const editGroup = async () => {\n    try {\n      await client.put(`groups/${groupToEdit.id}`, group);\n      refetch();\n      closeDialog();\n    } catch (error) {\n      console.log(\"🚀 ~ file: index.jsx ~ line 45 ~ onFinish ~ error\", error);\n    }\n  };\n\n  useEffect(() => {\n    if (visible === true) {\n      setGroup({ ...group, name: groupToEdit.name });\n    }\n  }, [visible, groupToEdit]);\n\n  return (\n    <Dialog open={visible} onClose={closeDialog}>\n      <DialogTitle>Editar grupo</DialogTitle>\n      <DialogContent>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Typography variant='caption' display='block' gutterBottom>\n              Nombre de Grupo:\n            </Typography>\n            <TextField\n              id='name'\n              name='name'\n              type='text'\n              required\n              value={group.name}\n              onChange={handleInputChange}\n              fullWidth\n              size='small'\n              margin='dense'\n            />\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button color='error' variant='contained' onClick={closeDialog}>\n          Cancelar\n        </Button>\n        <Button\n          color='success'\n          variant='contained'\n          onClick={editGroup}\n          disabled={group.name === \"\" ? true : false}\n        >\n          Actualizar\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default EditGroupDialog;\n","import { Add } from '@mui/icons-material';\nimport {\n  Box,\n  Button,\n  Chip,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControl,\n  FormHelperText,\n  Grid,\n  IconButton,\n  InputLabel,\n  MenuItem,\n  OutlinedInput,\n  Select,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport { grey } from '@mui/material/colors';\nimport React, { useEffect, useState } from 'react';\nimport { client } from '../../../config/environment';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nfunction getStyles(id, existent) {\n  return {\n    fontWeight: existent.find(item => item.id === id) ? 600 : 500,\n  };\n}\n\nconst InitialProcess = {\n  name: '',\n  areaId: '',\n  groupId: '',\n  newEntries: [],\n  existingEntries: [],\n  newOutputs: [],\n  existingOutputs: [],\n  newTools: [],\n  existingTools: [],\n};\n\nconst InitialName = {\n  name: '',\n  description: '',\n};\n\nconst EditProcessDialog = ({ visible, setVisible, refetch, actualProcess, setActualProcess }) => {\n  const [process, setProcess] = useState(InitialProcess);\n\n  const [allEntries, setAllEntries] = useState([]);\n  const [allOutputs, setAllOutputs] = useState([]);\n  const [allTools, setAllTools] = useState([]);\n\n  const [newEntry, setNewEntry] = useState(InitialName);\n  const [newOutput, setNewOutput] = useState(InitialName);\n  const [newTool, setNewTool] = useState(InitialName);\n\n  const [newEntriesArray, setNewEntriesArray] = useState([]);\n  const [newOutputsArray, setNewOutputsArray] = useState([]);\n  const [newToolsArray, setNewToolsArray] = useState([]);\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n\n    setProcess({\n      ...process,\n      [name]: value,\n    });\n  };\n\n  const handleChangeEntry = event => {\n    const aux = event.target.value;\n\n    let results = aux.map(item => {\n      return allEntries[item - 1] || process.existingEntries[item - 1];\n    });\n\n    let newProcess = { ...process, existingEntries: [...results] };\n\n    setProcess(newProcess);\n  };\n\n  const handleChangeOutput = event => {\n    const aux = event.target.value;\n\n    let results = aux.map(item => {\n      return allOutputs[item - 1] || process.existingOutputs[item - 1];\n    });\n\n    let newProcess = { ...process, existingOutputs: [...results] };\n\n    setProcess(newProcess);\n  };\n\n  const handleChangeTool = event => {\n    const aux = event.target.value;\n\n    let results = aux.map(item => {\n      return allTools[item - 1] || process.existingTools[item - 1];\n    });\n\n    let newProcess = { ...process, existingTools: [...results] };\n\n    setProcess(newProcess);\n  };\n\n  const handleInputChangeEntry = e => {\n    const { name, value } = e.target;\n\n    setNewEntry({\n      ...newEntry,\n      [name]: value,\n    });\n  };\n\n  const handleInputChangeOutput = e => {\n    const { name, value } = e.target;\n\n    setNewOutput({\n      ...newOutput,\n      [name]: value,\n    });\n  };\n\n  const handleInputChangeTool = e => {\n    const { name, value } = e.target;\n\n    setNewTool({\n      ...newTool,\n      [name]: value,\n    });\n  };\n\n  const saveNewEntry = () => {\n    setNewEntriesArray([...newEntriesArray, newEntry]);\n    setNewEntry(InitialName);\n  };\n\n  const saveNewOutput = () => {\n    setNewOutputsArray([...newOutputsArray, newOutput]);\n    setNewOutput(InitialName);\n  };\n\n  const saveNewTool = () => {\n    setNewToolsArray([...newToolsArray, newTool]);\n    setNewTool(InitialName);\n  };\n\n  const closeDialog = () => {\n    setVisible(false);\n    refetch();\n    resetStates();\n  };\n\n  const resetStates = () => {\n    setActualProcess();\n    setProcess(InitialProcess);\n    setAllEntries([]);\n    setAllOutputs([]);\n    setAllTools([]);\n    setNewEntry(InitialName);\n    setNewOutput(InitialName);\n    setNewTool(InitialName);\n    setNewEntriesArray([]);\n    setNewOutputsArray([]);\n    setNewToolsArray([]);\n  };\n\n  const updateProcess = async () => {\n    let auxProcess = process;\n    auxProcess.existingEntries = process.existingEntries.map(ent => {\n      return ent.id;\n    });\n\n    auxProcess.existingOutputs = process.existingOutputs.map(ent => {\n      return ent.id;\n    });\n\n    auxProcess.existingTools = process.existingTools.map(ent => {\n      return ent.id;\n    });\n\n    auxProcess.newEntries = newEntriesArray;\n    auxProcess.newOutputs = newOutputsArray;\n    auxProcess.newTools = newToolsArray;\n\n    try {\n      await client.put(`process/${actualProcess.id}`, auxProcess);\n      refetch();\n      closeDialog();\n    } catch (error) {\n      console.log('🚀 ~ file: index.jsx ~ line 45 ~ onFinish ~ error', error);\n    }\n  };\n\n  const loadEntries = async () => {\n    try {\n      await client.get('entries').then(res => {\n        let e = res?.data?.data;\n        setAllEntries(e);\n      });\n    } catch (error) {\n      console.log('🚀 ~ file: index.jsx ~ line 45 ~ onFinish ~ error', error);\n    }\n  };\n\n  const loadOutputs = async () => {\n    try {\n      await client.get('outputs').then(res => {\n        let e = res?.data?.data;\n        setAllOutputs(e);\n      });\n    } catch (error) {\n      console.log('🚀 ~ file: index.jsx ~ line 45 ~ onFinish ~ error', error);\n    }\n  };\n\n  const loadTools = async () => {\n    try {\n      await client.get('tools').then(res => {\n        let e = res?.data?.data;\n        setAllTools(e);\n      });\n    } catch (error) {\n      console.log('🚀 ~ file: index.jsx ~ line 45 ~ onFinish ~ error', error);\n    }\n  };\n\n  const loadProcess = async () => {\n    try {\n      await client.get(`process/${actualProcess?.id}`).then(res => {\n        let p = res?.data?.data;\n\n        p.entries = p.entries.map(entry => {\n          return {\n            id: entry.entry.id,\n            name: entry.entry.name,\n            description: entry.entry.description,\n          };\n        });\n\n        p.outputs = p.outputs.map(output => {\n          return {\n            id: output.output.id,\n            name: output.output.name,\n            description: output.output.description,\n          };\n        });\n\n        p.tools = p.tools.map(tool => {\n          return {\n            id: tool.tool.id,\n            name: tool.tool.name,\n            description: tool.tool.description,\n          };\n        });\n\n        setProcess({\n          ...process,\n          name: p.name,\n          groupId: String(p.groupId),\n          areaId: String(p.areaId),\n          existingEntries: p.entries,\n          existingOutputs: p.outputs,\n          existingTools: p.tools,\n        });\n      });\n    } catch (error) {\n      console.log('🚀 ~ file: index.jsx ~ line 45 ~ onFinish ~ error', error);\n    }\n  };\n\n  useEffect(() => {\n    if (actualProcess !== undefined && visible) {\n      loadProcess();\n      loadEntries();\n      loadOutputs();\n      loadTools();\n    }\n  }, [visible, actualProcess]);\n\n  useEffect(() => {\n    // console.log(\"en\", allEntries);\n    // console.log(\"ex\", process.existingEntries);\n  }, [process]);\n\n  return (\n    <Dialog\n      open={visible}\n      onClose={closeDialog}\n      maxWidth=\"xl\"\n      PaperProps={{\n        style: {\n          backgroundColor: '#F5F5F5',\n        },\n      }}\n    >\n      <DialogTitle>Editar Proceso</DialogTitle>\n      <DialogContent>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Box\n              sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                borderRadius: 1,\n                p: 2,\n                bgcolor: 'white',\n              }}\n            >\n              <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                Nombre de Proceso:\n              </Typography>\n              <TextField\n                id=\"name\"\n                name=\"name\"\n                type=\"text\"\n                required\n                value={process.name}\n                onChange={handleInputChange}\n                size=\"small\"\n                margin=\"dense\"\n                fullWidth\n              />\n            </Box>\n          </Grid>\n\n          <Grid item xs={12} sm={4}>\n            <Box\n              sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                borderRadius: 2,\n                p: 2,\n                bgcolor: 'white',\n              }}\n            >\n              <Box\n                sx={{\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                }}\n              >\n                <Typography fontWeight={600}>Entradas</Typography>\n                <IconButton disabled={!(newEntry.name && newEntry.description)} onClick={saveNewEntry}>\n                  <Add />\n                </IconButton>\n              </Box>\n\n              <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                Nombre:\n              </Typography>\n              <TextField\n                id=\"name\"\n                name=\"name\"\n                type=\"text\"\n                required\n                value={newEntry.name}\n                onChange={handleInputChangeEntry}\n                size=\"small\"\n                margin=\"dense\"\n                fullWidth\n              />\n\n              <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                Descripción:\n              </Typography>\n              <TextField\n                id=\"description\"\n                name=\"description\"\n                type=\"text\"\n                required\n                value={newEntry.description}\n                onChange={handleInputChangeEntry}\n                size=\"small\"\n                margin=\"dense\"\n                fullWidth\n              />\n\n              <Typography variant=\"caption\" fontWeight={600} color={grey[400]} align=\"right\">\n                Entradas agregadas manualmente\n              </Typography>\n\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5, p: 2 }}>\n                {newEntriesArray.map((value, index) => (\n                  <Chip key={index} label={value.name} sx={{ fontWeight: 600 }} />\n                ))}\n              </Box>\n\n              <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                Entradas existentes:\n              </Typography>\n              <FormControl>\n                <Select\n                  multiple\n                  value={process.existingEntries.map(entry => entry.id)}\n                  onChange={handleChangeEntry}\n                  renderValue={selected => (\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                      {selected.map(id => {\n                        let entry = process.existingEntries.find(entry => entry.id === id);\n                        return <Chip key={id} label={entry.name} />;\n                      })}\n                    </Box>\n                  )}\n                  MenuProps={MenuProps}\n                >\n                  {allEntries.map(e => (\n                    <MenuItem key={e.id} value={e.id} style={getStyles(e.id, process.existingEntries)}>\n                      {e.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Box>\n          </Grid>\n\n          <Grid item xs={12} sm={4}>\n            <Box\n              sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                borderRadius: 2,\n                p: 2,\n                bgcolor: 'white',\n              }}\n            >\n              <Box\n                sx={{\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                }}\n              >\n                <Typography fontWeight={600}>Salidas</Typography>\n                <IconButton disabled={!(newOutput.name && newOutput.description)} onClick={saveNewOutput}>\n                  <Add />\n                </IconButton>\n              </Box>\n\n              <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                Nombre:\n              </Typography>\n              <TextField\n                id=\"name\"\n                name=\"name\"\n                type=\"text\"\n                required\n                value={newOutput.name}\n                onChange={handleInputChangeOutput}\n                size=\"small\"\n                margin=\"dense\"\n                fullWidth\n              />\n\n              <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                Descripción:\n              </Typography>\n              <TextField\n                id=\"description\"\n                name=\"description\"\n                type=\"text\"\n                required\n                value={newOutput.description}\n                onChange={handleInputChangeOutput}\n                size=\"small\"\n                margin=\"dense\"\n                fullWidth\n              />\n\n              <Typography variant=\"caption\" fontWeight={600} color={grey[400]} align=\"right\">\n                Salidas agregadas manualmente\n              </Typography>\n\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5, p: 2 }}>\n                {newOutputsArray.map((value, index) => (\n                  <Chip key={index} label={value.name} sx={{ fontWeight: 600 }} />\n                ))}\n              </Box>\n\n              <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                Salidas existentes:\n              </Typography>\n\n              <FormControl>\n                <Select\n                  multiple\n                  value={process.existingOutputs.map(entry => entry.id)}\n                  onChange={handleChangeOutput}\n                  renderValue={selected => (\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                      {selected.map(id => {\n                        let entry = process.existingOutputs.find(entry => entry.id === id);\n                        return <Chip key={id} label={entry.name} />;\n                      })}\n                    </Box>\n                  )}\n                  MenuProps={MenuProps}\n                >\n                  {allOutputs.map(e => (\n                    <MenuItem key={e.id} value={e.id} style={getStyles(e.id, process.existingOutputs)}>\n                      {e.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Box>\n          </Grid>\n\n          <Grid item xs={12} sm={4}>\n            <Box\n              sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                borderRadius: 2,\n                p: 2,\n                bgcolor: 'white',\n              }}\n            >\n              <Box\n                sx={{\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                }}\n              >\n                <Typography fontWeight={600}>Herramientas</Typography>\n                <IconButton disabled={!(newTool.name && newTool.description)} onClick={saveNewTool}>\n                  <Add />\n                </IconButton>\n              </Box>\n\n              <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                Nombre:\n              </Typography>\n              <TextField\n                id=\"name\"\n                name=\"name\"\n                type=\"text\"\n                required\n                value={newTool.name}\n                onChange={handleInputChangeTool}\n                size=\"small\"\n                margin=\"dense\"\n                fullWidth\n              />\n\n              <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                Descripción:\n              </Typography>\n              <TextField\n                id=\"description\"\n                name=\"description\"\n                type=\"text\"\n                required\n                value={newTool.description}\n                onChange={handleInputChangeTool}\n                size=\"small\"\n                margin=\"dense\"\n              />\n\n              <Typography variant=\"caption\" fontWeight={600} color={grey[400]} align=\"right\">\n                Herramientas agregadas manualmente\n              </Typography>\n\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5, p: 2 }}>\n                {newToolsArray.map((value, index) => (\n                  <Chip key={index} label={value.name} sx={{ fontWeight: 600 }} />\n                ))}\n              </Box>\n\n              <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                Herramientas existentes:\n              </Typography>\n              <FormControl>\n                <Select\n                  multiple\n                  value={process.existingTools.map(item => item.id)}\n                  onChange={handleChangeTool}\n                  renderValue={selected => (\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                      {selected.map(id => {\n                        let item = process.existingTools.find(item => item.id === id);\n                        return <Chip key={id} label={item.name} />;\n                      })}\n                    </Box>\n                  )}\n                  MenuProps={MenuProps}\n                >\n                  {allTools.map(e => (\n                    <MenuItem key={e.id} value={e.id} style={getStyles(e.id, process.existingTools)}>\n                      {e.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Box>\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"error\" variant=\"contained\" onClick={closeDialog}>\n          Cancelar\n        </Button>\n        <Button color=\"success\" variant=\"contained\" onClick={updateProcess} disabled={process.name === '' ? true : false}>\n          Actualizar\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default EditProcessDialog;\n","import { Add } from \"@mui/icons-material\";\nimport {\n  Box,\n  Button,\n  IconButton,\n  Menu,\n  MenuItem,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tooltip,\n  Typography,\n} from \"@mui/material\";\nimport { grey } from \"@mui/material/colors\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { client } from \"../../config/environment\";\nimport AddAreaDialog from \"./addAreaDialog\";\nimport AddGroupDialog from \"./addGroupDialog\";\nimport AddProcessDialog from \"./addProcessDialog\";\nimport EditAreaDialog from \"./editAreaDialog\";\nimport EditGroupDialog from \"./editGroupDialog\";\nimport EditProcessDialog from \"./editProcessDialog\";\n\nconst Dashboard = () => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n\n  const [anchorEls, setAnchorEls] = useState(null);\n  const opens = Boolean(anchorEls);\n\n  const [groups, setGroups] = useState([]);\n  const [areas, setAreas] = useState([]);\n  const [process, setProcess] = useState([]);\n  const [global, setGlobal] = useState([]);\n  const [actualCoor, setActualCoor] = useState();\n\n  const [editGroup, setEditGroup] = useState();\n  const [editArea, setEditArea] = useState();\n  const [editProcess, setEditProcess] = useState();\n\n  const [addGroupDialogShow, setAddGroupDialogShow] = useState(false);\n  const [addAreaDialogShow, setAddAreaDialogShow] = useState(false);\n  const [addProcessDialogShow, setAddProcessDialogShow] = useState(false);\n\n  const [editGroupDialogShow, setEditGroupDialogShow] = useState(false);\n  const [editAreaDialogShow, setEditAreaDialogShow] = useState(false);\n  const [editProcessDialogShow, setEditProcessDialogShow] = useState(false);\n\n  const refetch = () => {\n    loadGroups();\n    loadAreas();\n    loadProcesses();\n  };\n\n  const loadGroups = async () => {\n    try {\n      await client.get(\"groups\").then((res) => {\n        let gro = res?.data?.data;\n        setGroups(gro);\n      });\n    } catch (error) {\n      console.log(\"🚀 ~ file: index.jsx ~ line 45 ~ onFinish ~ error\", error);\n    }\n  };\n\n  const loadAreas = async () => {\n    try {\n      await client.get(\"areas\").then((res) => {\n        let are = res?.data?.data;\n        setAreas(are);\n      });\n    } catch (error) {\n      console.log(\"🚀 ~ file: index.jsx ~ line 45 ~ onFinish ~ error\", error);\n    }\n  };\n\n  const loadProcesses = async () => {\n    try {\n      await client.get(\"process\").then((res) => {\n        let pro = res?.data?.data;\n        setProcess(pro);\n      });\n    } catch (error) {\n      console.log(\"🚀 ~ file: index.jsx ~ line 45 ~ onFinish ~ error\", error);\n    }\n  };\n\n  const openEditGroupDialog = (g) => {\n    setEditGroup(g);\n    setEditGroupDialogShow(true);\n  };\n\n  const openEditAreaDialog = (a) => {\n    setEditArea(a);\n    setEditAreaDialogShow(true);\n  };\n\n  const openEditProcessDialog = (p) => {\n    setEditProcess(p);\n    setEditProcessDialogShow(true);\n  };\n\n  useEffect(() => {\n    loadGroups();\n    loadAreas();\n    loadProcesses();\n  }, []);\n\n  const createTable = () => {\n    let globalArray = [];\n\n    areas.forEach((a) => {\n      let aux = [];\n\n      groups.forEach((c) => {\n        let curr = process.filter(\n          (pro) => pro.areaId === a.id && pro.groupId === c.id\n        );\n\n        aux.push([...curr]);\n      });\n\n      globalArray.push(aux);\n    });\n\n    setGlobal(globalArray);\n  };\n\n  useEffect(() => {\n    createTable();\n  }, [process]);\n\n  return (\n    <>\n      <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", mb: 4 }}>\n        <Button\n          variant='contained'\n          onClick={(event) => {\n            setAnchorEl(event.currentTarget);\n          }}\n        >\n          Agregar\n        </Button>\n        <Menu\n          anchorEl={anchorEl}\n          open={open}\n          onClose={() => {\n            setAnchorEl(null);\n          }}\n          MenuListProps={{\n            \"aria-labelledby\": \"basic-button\",\n          }}\n        >\n          <MenuItem\n            key={1}\n            onClick={() => {\n              setAnchorEl(null);\n              setAddAreaDialogShow(true);\n            }}\n          >\n            Area\n          </MenuItem>\n          <MenuItem\n            key={2}\n            onClick={() => {\n              setAnchorEl(null);\n              setAddGroupDialogShow(true);\n            }}\n          >\n            Grupo\n          </MenuItem>\n          <MenuItem\n            key={3}\n            onClick={() => {\n              setAnchorEl(null);\n              setAddProcessDialogShow(true);\n            }}\n          >\n            Proceso\n          </MenuItem>\n        </Menu>\n      </Box>\n\n      <TableContainer>\n        <Table\n          sx={{\n            minWidth: 650,\n            \"& .MuiTableCell-root:hover\": {\n              bgcolor: \"secondary.main\",\n            },\n          }}\n        >\n          <TableHead>\n            <TableRow sx={{ \"& td\": { border: 0 } }}>\n              <TableCell\n                sx={{\n                  \"&:hover\": {\n                    bgcolor: \"transparent !important\",\n                  },\n                }}\n              ></TableCell>\n              {groups.map((g) => (\n                <Tooltip key={g.id} title='Editar' placement='top'>\n                  <TableCell\n                    onClick={() => {\n                      openEditGroupDialog(g);\n                    }}\n                    align='center'\n                    sx={{\n                      background: \"#D0D3D4\",\n                      borderRadius: 1,\n                    }}\n                  >\n                    <b>{g?.name}</b>\n                  </TableCell>\n                </Tooltip>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {areas.map((a, index) => (\n              <TableRow key={a.name} sx={{ \"& td\": { border: 0 } }}>\n                <Tooltip key={a.id} title='Editar' placement='top'>\n                  <TableCell\n                    sx={{\n                      position: \"sticky\",\n                      left: 0,\n                      background: \"#D0D3D4\",\n                      borderRadius: 1,\n                    }}\n                    onClick={() => {\n                      openEditAreaDialog(a);\n                    }}\n                    component='th'\n                    scope='row'\n                    align='center'\n                  >\n                    <b> {a.name}</b>\n                  </TableCell>\n                </Tooltip>\n\n                {global[index]?.map((ga, count) => (\n                  <TableCell\n                    key={count}\n                    align='center'\n                    sx={{\n                      background: \"#F8F9F9\",\n                      borderRadius: 1,\n                    }}\n                    onClick={() => {\n                      if (ga.length === 0) {\n                        setAddProcessDialogShow(true);\n                        setActualCoor({ area: a.id, group: groups[count].id });\n                      }\n                    }}\n                  >\n                    {ga.length !== 0 ? (\n                      ga?.map((proc) => (\n                        <div\n                          key={proc.id}\n                          onClick={() => {\n                            openEditProcessDialog(proc);\n                          }}\n                        >\n                          <Typography>{proc?.name}</Typography>\n                        </div>\n                      ))\n                    ) : (\n                      <Add sx={{ fill: \"#F8F9F9\" }} />\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <AddGroupDialog\n        visible={addGroupDialogShow}\n        setVisible={setAddGroupDialogShow}\n        refetch={refetch}\n      />\n\n      <AddAreaDialog\n        visible={addAreaDialogShow}\n        setVisible={setAddAreaDialogShow}\n        refetch={refetch}\n      />\n\n      <AddProcessDialog\n        visible={addProcessDialogShow}\n        setVisible={setAddProcessDialogShow}\n        refetch={refetch}\n        groups={groups}\n        areas={areas}\n        actual={actualCoor}\n        setActual={setActualCoor}\n      />\n\n      <EditGroupDialog\n        visible={editGroupDialogShow}\n        setVisible={setEditGroupDialogShow}\n        refetch={refetch}\n        groupToEdit={editGroup}\n        setGroupToEdit={setEditGroup}\n      />\n\n      <EditAreaDialog\n        visible={editAreaDialogShow}\n        setVisible={setEditAreaDialogShow}\n        refetch={refetch}\n        areaToEdit={editArea}\n        setAreaToEdit={setEditArea}\n      />\n\n      <EditProcessDialog\n        visible={editProcessDialogShow}\n        setVisible={setEditProcessDialogShow}\n        refetch={refetch}\n        actualProcess={editProcess}\n        setActualProcess={setEditProcess}\n      />\n    </>\n  );\n};\n\nexport default Dashboard;\n","import {\n  Alert,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  Snackbar,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { client } from \"../../../../config/environment\";\n\nconst InitialUser = {\n  email: \"\",\n  password: \"\",\n};\n\nconst CreateUser = ({ visible, setVisible, refetch }) => {\n  const [newUser, setNewUser] = useState(InitialUser);\n\n  const [alert, setAlert] = useState(false);\n\n  const handleClick = () => {\n    setAlert(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setAlert(false);\n  };\n\n  const resetStates = () => {\n    setNewUser(InitialUser);\n  };\n\n  const closeDialog = () => {\n    setVisible(false);\n    refetch();\n    resetStates();\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n\n    setNewUser({\n      ...newUser,\n      [name]: value,\n    });\n  };\n\n  const onFinish = async () => {\n    try {\n      await client.post(\"users\", newUser);\n      closeDialog();\n    } catch (error) {\n      console.log(\"🚀 ~ file: index.jsx ~ line 45 ~ onFinish ~ error\", error);\n      handleClick();\n    }\n  };\n\n  return (\n    <>\n      <Snackbar open={alert} autoHideDuration={3000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity='error' sx={{ width: \"100%\" }}>\n          Error al crear!\n        </Alert>\n      </Snackbar>\n      <Dialog open={visible} onClose={closeDialog}>\n        <DialogTitle>Crear usuario</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography variant='caption' display='block' gutterBottom>\n                Correo a utilizar:\n              </Typography>\n              <TextField\n                id='email'\n                name='email'\n                type='email'\n                required\n                value={newUser.email}\n                onChange={handleInputChange}\n                fullWidth\n                size='small'\n                margin='dense'\n              />\n            </Grid>\n            <Grid item xs>\n              <Typography variant='caption' display='block' gutterBottom>\n                Contraseña:\n              </Typography>\n              <TextField\n                id='password'\n                name='password'\n                type='password'\n                required\n                value={newUser.password}\n                onChange={handleInputChange}\n                fullWidth\n                size='small'\n                margin='dense'\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button color='error' variant='contained' onClick={closeDialog}>\n            Cancelar\n          </Button>\n          <Button color='success' variant='contained' onClick={onFinish}>\n            Crear\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default CreateUser;\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  Typography,\n} from \"@mui/material\";\nimport React from \"react\";\nimport { client } from \"../../../../config/environment\";\n\nconst DeleteUser = ({ visible, setVisible, user, refetch }) => {\n  const closeDialog = () => {\n    setVisible(false);\n    refetch();\n  };\n\n  const onDelete = async () => {\n    try {\n      await client.delete(`users/${user?.id}`);\n      closeDialog();\n    } catch (error) {\n      console.log(\"🚀 ~ file: index.jsx ~ line 22 ~ onDelete ~ error\", error);\n    }\n  };\n\n  return (\n    <Dialog open={visible}>\n      <DialogContent>\n        <DialogContentText gutterBottom variant='h6' fontWeight={600}>\n          ¿Seguro que deseas borrar {user?.email}?\n        </DialogContentText>\n        <Typography variant='body1'>\n          Al borrar este usuario no podrás volver a recuperarlo.\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={closeDialog}>Cancelar</Button>\n        <Button variant='contained' color='error' onClick={onDelete}>\n          Borrar\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default DeleteUser;\n","import { Add, DeleteForever, Edit } from \"@mui/icons-material\";\nimport { Box, Button, Paper } from \"@mui/material\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport React, { useEffect, useState } from \"react\";\nimport { client } from \"../../config/environment\";\nimport CreateUser from \"./components/createUser\";\nimport DeleteUser from \"./components/deleteUser\";\n\nconst Users = () => {\n  const [createUserDialog, setCreateUserDialog] = useState(false);\n  const [deleteUserDialog, setDeleteUserDialog] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState({});\n\n  const columns = [\n    {\n      field: \"email\",\n      headerName: \"Correo\",\n      flex: 0.75,\n    },\n    {\n      field: \"edit\",\n      headerName: \"Opciones\",\n      flex: 0.25,\n      renderCell: (params) => {\n        return (\n          <Box>\n            <Button startIcon={<Edit />} />\n            <Button\n              startIcon={<DeleteForever />}\n              onClick={() => {\n                openDeleteUserDialog(params.row);\n              }}\n            />\n          </Box>\n        );\n      },\n    },\n  ];\n  const openCreateUserDialog = () => {\n    setCreateUserDialog(true);\n  };\n\n  const openDeleteUserDialog = (user) => {\n    setDeleteUserDialog(true);\n    setSelectedUser(user);\n  };\n\n  const findUsers = async () => {\n    try {\n      await client.get(\"users\").then((res) => {\n        let list = res?.data?.data;\n        setUsers(list);\n      });\n    } catch (error) {\n      console.log(\"🚀 ~ file: index.jsx ~ line 55 ~ findUsers ~ error\", error);\n    }\n  };\n\n  useEffect(() => {\n    findUsers();\n  }, []);\n\n  return (\n    <>\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n        }}\n      >\n        <Button\n          variant='contained'\n          endIcon={<Add />}\n          onClick={openCreateUserDialog}\n        >\n          Nuevo\n        </Button>\n      </Box>\n      <Paper sx={{ mt: 2 }}>\n        <DataGrid autoHeight columns={columns} rows={users} hideFooter />\n      </Paper>\n\n      <CreateUser\n        visible={createUserDialog}\n        setVisible={setCreateUserDialog}\n        refetch={findUsers}\n      />\n      <DeleteUser\n        visible={deleteUserDialog}\n        setVisible={setDeleteUserDialog}\n        user={selectedUser}\n        refetch={findUsers}\n      />\n    </>\n  );\n};\n\nexport default Users;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Process = () => {\n  return <Link to={\"/dashboard\"}>Regresaras</Link>;\n};\n\nexport default Process;\n","import { Backdrop, CircularProgress, CssBaseline } from '@mui/material';\nimport React from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport MainLayout from './layouts/main';\nimport { useSession } from './providers/session';\nimport Auth from './views/auth';\nimport Dashboard from './views/dashboard';\nimport Users from './views/users';\nimport Process from './views/process';\n\nconst App = () => {\n  const { isLogged, loading } = useSession();\n\n  if (loading) {\n    return (\n      <Backdrop open={loading} sx={{ zIndex: 1500 }}>\n        <CircularProgress />\n      </Backdrop>\n    );\n  }\n\n  if (!isLogged) {\n    return <Auth />;\n  }\n\n  return (\n    <MainLayout>\n      <CssBaseline />\n      <Routes>\n        <Route path=\"/dashboard\" element={<Dashboard />} />\n        <Route path=\"/process\" element={<Process />} />\n        <Route path=\"/users\" element={<Users />} />\n        <Route path=\"*\" element={<Navigate to=\"/dashboard\" />} />\n      </Routes>\n    </MainLayout>\n  );\n};\n\nexport default App;\n","import { createTheme } from \"@mui/material/styles\";\n\nlet theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#566573\",\n    },\n    secondary: {\n      main: \"#D6DBDF\",\n    },\n    background: {\n      default: \"#F5F5F5\",\n    },\n  },\n  responsiveFontSizes: true,\n});\n\n// theme = responsiveFontSizes(theme);\n\nexport default theme;\n","import { ThemeProvider } from \"@mui/material\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport theme from \"./config/theme\";\nimport SessionProvider from \"./providers/session/provider\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\n\nroot.render(\n  <ThemeProvider theme={theme}>\n    <Router basename='/'>\n      <SessionProvider>\n        <App />\n      </SessionProvider>\n    </Router>\n  </ThemeProvider>\n);\n"],"sourceRoot":""}