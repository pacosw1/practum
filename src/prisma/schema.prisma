// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id     Int     @id @default(autoincrement())
  active Boolean @default(true)

  email    String @unique
  password String
}

// -------------------------------------------------------------------

// One to One with process
model Area {
  id     Int     @id @default(autoincrement())
  active Boolean @default(true)
  order  Int     @default(autoincrement())

  name      String    @unique
  processes Process[]
}

// One to one with process
model Group {
  id    Int @id @default(autoincrement())
  order Int @default(autoincrement())

  active    Boolean   @default(true)
  name      String    @unique
  processes Process[]
}

model Process {
  id      Int     @id @default(autoincrement())
  active  Boolean @default(true)
  name    String  @unique
  group   Group   @relation(fields: [groupId], references: [id])
  groupId Int

  Area   Area @relation(fields: [areaId], references: [id])
  areaId Int

  entries EntriesOnProcess[]
  outputs OutputsOnProcess[]
  tools   ToolsOnProcess[]
}

// -------------------------------------------------------------------

model Entry {
  id          Int     @id @default(autoincrement())
  active      Boolean @default(true)
  name        String  @unique
  description String

  processes EntriesOnProcess[]
}

// Many to Many relation table (process_entries)
model EntriesOnProcess {
  process   Process @relation(fields: [processId], references: [id])
  processId Int
  entry     Entry   @relation(fields: [entryId], references: [id])
  entryId   Int
  isExit    Boolean @default(false)

  @@id([processId, entryId, isExit])
}

// // -------------------------------------------------------------------

// Many to Many Relation Table (process_outputs)
model OutputsOnProcess {
  process   Process @relation(fields: [processId], references: [id])
  processId Int
  output    Output  @relation(fields: [outputId], references: [id])
  outputId  Int

  @@id([processId, outputId])
}

model Output {
  id          Int     @id @default(autoincrement())
  active      Boolean @default(true)
  name        String  @unique
  description String

  processes OutputsOnProcess[]
}

// // -------------------------------------------------------------------

model ToolsOnProcess {
  process   Process @relation(fields: [processId], references: [id])
  processId Int
  tool      Tool    @relation(fields: [toolId], references: [id])
  toolId    Int

  @@id([processId, toolId])
}

model Tool {
  id          Int     @id @default(autoincrement())
  active      Boolean @default(true)
  name        String  @unique
  description String

  processes ToolsOnProcess[]
}
